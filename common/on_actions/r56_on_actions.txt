
on_actions = {	
	on_annex = {
		effect = {
			if = {
				limit = {
					FROM = {
						tag = AUS
					}
				}
				AUS = {
					set_politics = { ruling_party = democratic elections_allowed = yes }
					add_popularity = {
						ideology = democratic
						popularity = 0.45
					}
					load_focus_tree = generic_focus
					if = {
						limit = {
							NOT = {
								has_idea = AUS_austrian_neutrality
							}
						}
						add_ideas = AUS_austrian_neutrality
					}
				}
			}			
		
			if = {
				limit = {
					FROM = {
						tag = CZE
					}					
				}
				CZE = {
					set_politics = { ruling_party = democratic elections_allowed = yes }
					add_popularity = {
						ideology = democratic
						popularity = 0.5
					}
					load_focus_tree = generic_focus
					remove_ideas = {
						emil_hacha
						CZKE_national_unity_government_idea
						CZKE_fifth_column
						CZKE_fifth_column_2
						CZKE_unruly_minorities
						CZKE_unruly_minorities_2
					}
					if = {
						limit = {
							ENG = {
								has_government = democratic
								democratic > 0.35
							}
							ROOT = {
								NOT = {
									tag = ENG
								}
							}
						}
						every_operative = {
							limit = {
								has_trait = operative_double_agent
							}
							turn_operative = { turned_by = ENG }	
						}						
					}
					
#					if = {
#						limit = {
#							any_country = {
#								OR = {
#									is_major = yes
#									is_faction_leader = yes
#								}
#								has_government = democratic
#								has_civil_war = no
#							}
#						}					
#						any_operative_leader = { 
#
#							random_list = {
#								10 = {
#									kill_operative = {
#										killed_by = FAK
#									}
#								}
#								70 = {
#									random_country = {
#										limit = {
#											has_government = democratic
#											OR = {
#												is_major = yes
#												is_faction_leader = yes
#											}
#											has_war_together_with = CZE											
#										}
#										turn_operative = { turned_by = PREV }
#										country_event = r56_spying_event.1
#									}
#									
#								}
#								10 = {
#									random_country = {
#										limit = {
#											has_government = democratic
#											OR = {
#												is_major = yes
#												is_faction_leader = yes
#											}
#											NOT = {
#												has_war_together_with = CZE
#												has_war_with = CZE
#											}
#																						
#										}
#										turn_operative = { turned_by = PREV }
#										country_event = r56_spying_event.1
#									}									
#								}
#								10 = {
#									#operative goes "abroad" and could potentially be recruited again
#									turn_operative = { turned_by = FAK }
#									set_unit_leader_flag = hiding_abroad									
#								}																							
#							
#							}
#
#						}
#
#					}
					#kill_operative = {
					#	killed_by = FROM
					#}
					#turn_operative = { turned_by = ROOT }
					#add_nationality = FROM
				}

			}
			#probably remove in the future to avoid clones
			if = {
				limit = {
					ROOT = {
						tag = AUS
					}
					FROM = {
						tag = HUN
						is_ai = yes
					}
				}
				AUS = {
					create_operative_leader = {
						name = "Eugenio Zilahy Kiss"
						portrait_path = gfx/leaders/Europe/portrait_europe_generic_operative_male_5.dds 
						traits = { operative_well_groomed }
						bypass_recruitment = no
						available_to_spy_master = yes
						nationalities = { HUN AUS ARG }
					}					
				}
			}
			if = {
				limit = {
					OR = {
						is_independent_warlords = no
						NOT = {
							has_country_flag = is_warlords
						}
					}
					FROM = {
						tag = event_target:KMT_central_gov_tag
					}
				}
				if = {
					limit = {
						NOT = {
							original_tag = FROM
						}
					}
					clear_global_event_target = KMT_central_gov_tag
					set_global_flag = KMT_central_government_destroyed
					every_other_country = {
						limit = {
							OR = {
								is_independent_warlords = yes
								has_country_flag = is_warlords
							}
						}
						country_event = { id = claim_central.6 }
					}
				}
				if = {
					limit = {
						original_tag = FROM
					}
					set_country_flag = KMT_central_government_flag
					save_global_event_target_as = KMT_central_gov_tag
					capital_scope = {
						set_state_flag = KMT_central_gov_capital
					}
					country_event = { id = claim_central.7 }
					every_other_country = {
						limit = {
							OR = {
								is_independent_warlords = yes
								has_country_flag = is_warlords
							}
																	
						}
						country_event = { id = claim_central.8 }
					}
				}
			}
		}
	}

###---> On Capitulation <><> <><> <><>
	on_capitulation = {
		effect = {
			every_state = {
				limit = {
					has_state_flag = r56_aluminium_collection
				}
				add_resource = {
					type = aluminium
					amount = -1
				}
				clr_state_flag = r56_aluminium_collection				
			}
			if = { #
				limit = {
					tag = VIC
					
				}
				random_other_country = {
					limit = {
						has_country_flag = free_france
					}
					annex_country = { target = VIC transfer_troops = yes }
					
				}
			}			
			if = { #avoid brits in exile in britain
				limit = {
					has_dlc = "Man the Guns"
					original_tag = RAJ
					is_subject_of = ENG
					has_government = democratic
				}
				drop_cosmetic_tag = yes
			}
			if = {
				limit = {
					has_dlc = "Man the Guns"
					original_tag = MAL
					is_subject_of = ENG
					has_government = democratic
				}
				drop_cosmetic_tag = yes
			}			
			if = {
				limit = {
					has_dlc = "Man the Guns"
					original_tag = INS
					is_subject_of = HOL
					has_government = democratic
				}
				drop_cosmetic_tag = yes
			}
			if = {
				limit = {
					AND = {
						original_tag = DNZ
						DNZ = {
							NOT = { has_country_flag = r56_dnz_dont_lose_cores }
						}
					}
				}
				85 = { 
					remove_core_of = DNZ
				}
			}
			if = {
				limit = {
					original_tag = DEN
					OR = {
						ICE = { is_subject_of = DEN }
						DEN = { owns_state = 100 }
						ICE = { owns_state = 100 }
					}
					NOR = {
						NOT = {
							OR = {
								has_completed_focus = NOR_reclaim_the_islands
								has_completed_focus = NOR_icelandic-faroese_revolt
								has_completed_focus = NOR_reclaim_danish
								has_completed_focus = NOR_unite_the_scandinavian_workers
							}
						}
					}
				}
				country_event = { id = wtt_denmark.1 days = 1 }
			}

			if = {
				limit = {
					ROOT = {
						OR = {
							tag = SHX
							tag = GXC
							tag = XSM
							tag = YUN
							tag = SIK
							tag = CHI
						}
						has_country_flag = is_warlords
						is_in_faction_with = event_target:KMT_central_gov_tag
						has_idea = KMT_united_front
					}
				}
				event_target:KMT_central_gov_tag = {
					country_event = { id = kmt.300 }
				}
			}
			
			if = {
				limit = {
					ROOT = {
						tag = MAN
						is_puppet_of = JAP
						has_country_leader = {
							name = "Aisin Gioro Puyi"
							ruling_only = yes
						}
					}
					FROM = {
						OR = {
							tag = CHI
							tag = PRC
							tag = event_target:KMT_central_gov_tag
						}
					}
				}
				FROM = {
					country_event = { id = kmt.303 }
				}
			}
			
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = PGR
							has_cosmetic_tag = HCPC
						}
						is_puppet_of = CHI
					}
				}
				CHI = {
					country_event = { id = kmt.300 }
				}
				MEN = {
					transfer_state = 611
				}
			}
			if = {
				limit = {
					original_tag = ITA
					ITA = {
						NOT = {
							has_completed_focus = ITA_royal_intervention
						}
						has_government = fascism
						has_completed_focus = ITA_militarize_the_rome_protocols
						has_war_with = GER
					}
					GER = {
						has_government = fascism
						has_war_with = ITA
					}
				}
				ITA = {
					set_cosmetic_tag = ITA_RSI
					set_party_name = { 
						ideology = fascism 
						long_name = "Partito Fascista Repubblicano"
						name = "PFR"
					}				   
					retire_ideology_leader = fascism
					if = {
						limit = {
							NOT = {
								has_country_flag = r56_ita_badoglio_is_leader
							}
						}
						if = { 
							limit = { has_unit_leader = 690 }
							remove_unit_leader = 690
						}
						create_country_leader = {
							name = "Pietro Badoglio"
							desc = "POLITICS_JULES_BREVIE_DESC"
							picture = "gfx/leaders/ITA/Portrait_Italy_Pietro_Badoglio.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = {
								army_connections
							}
						}
					}
				}
			}
			
			if = {
				limit = {
					original_tag = POL
				}
				if = { 
					limit = { has_unit_leader = 3180 }
					remove_unit_leader = 3180
				}
				if = {
					limit = {
						AND = {
							NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
							NOT = { has_completed_focus = POL_Seek_Autonomy }
						}
					}
					POL = { set_party_name = { ideology = communism long_name = POL_GL_party_long name = POL_GL_party } }
				}
				if = {
					limit = {
						POL = {
							is_puppet = no
						}
					}
					POL = { set_party_name = { ideology = fascism long_name = POL_KN_party_long name = POL_KN_party } }
					POL = { set_party_name = { ideology = neutrality long_name = POL_ZWZ_party_long name = POL_ZWZ_party } }
					set_cosmetic_tag = POLAK
				}
				if = {
					limit = {
						POL = {
							has_government = neutrality
							has_civil_war = no
							is_puppet = no
							is_in_faction = yes
							NOT = { has_country_flag = POL_Exile_Government_Formed }
						}
					}
					POL = { country_event = poland.196 }
					set_country_flag = POL_Exile_Government_Formed
				}
				if = {
					limit = {
						POL = {
							has_government = democratic
							has_civil_war = no
							is_puppet = no
							is_in_faction = yes
							NOT = { has_completed_focus = POL_The_Polish_Socialist_Party }
							NOT = { has_completed_focus = POL_The_Endecja_Movement }
							NOT = { has_country_flag = POL_Exile_Government_Formed }
						}
					}
					add_offsite_building = { type = arms_factory level = 1 }
					create_country_leader = {
						name = "Władysław Sikorski"
						desc = "POLITICS_WLADYSLAW_SIKORSKI_DESC"
						picture = "Portrait_Poland_Wladyslaw_Sikorski.dds"
						expire = "1965.1.1"
						ideology = liberalism
						traits = {
							democratic_reformer
							r56_trait_opposed_to_communism
						}
					}
					set_country_flag = POL_Exile_Government_Formed
				}
				if = {
					limit = {
						POL = {
							has_government = democratic
							has_civil_war = no
							is_puppet = no
							is_in_faction = yes
							has_completed_focus = POL_The_Polish_Socialist_Party
							NOT = { has_country_flag = POL_Exile_Government_Formed }
						}
					}
					POL = { country_event = poland.198 }
					set_country_flag = POL_Exile_Government_Formed
				}
				if = {
					limit = {
						POL = {
							has_government = democratic
							has_civil_war = no
							is_puppet = no
							is_in_faction = yes
							has_completed_focus = POL_The_Endecja_Movement
							NOT = { has_country_flag = POL_Exile_Government_Formed }
						}
					}
					set_global_flag = Dmowski_dead
					create_country_leader = {
						name = "Tadeusz Bielecki"
						desc = "POLITICS_Tadeusz_Bielecki_DESC"
						picture = "r56_portrait_POL_Tadeusz_Bielecki.dds"
						expire = "1965.1.1"
						ideology = conservatism
						traits = {
							polish_nationalist
							political_pragmatist
							dislikes_germany
						}
					}
					POL = { set_party_name = { ideology = democratic long_name = POL_NOW_long name = POL_NOW_party } }
					set_country_flag = POL_Exile_Government_Formed
				}
				94 = { add_core_of = BLR }
				97 = { add_core_of = BLR }
				95 = { add_core_of = BLR }
				96 = { add_core_of = BLR }
				89 = { add_core_of = UKR }
				91 = { add_core_of = UKR }
				93 = { add_core_of = UKR }
				784 = { add_core_of = LIT }
			}
		}
	}
	on_civil_war_end_before_annexation = {
		effect = {
			if = {
				limit = {
					FROM = {
						original_tag = HUN				
					}
				}
				FROM = {
					every_unit_leader = {
						set_unit_leader_flag = hungarian_rebel
						set_nationality = FAK
					}
					
				}
			}
		
			if = {
				limit = {
					FROM = {
						original_tag = INS
						OR = {
							is_puppet_of = HOL
							AND = {
								is_puppet_of = JAP
								JAP = {
									has_government = democratic
									has_completed_focus = JAP_pacific_guardian
								}
							}
						}			
					}
				}
				FROM = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = HOL_indonesia_commander
						}
						set_nationality = HOL
					}
					
				}
			}
		}		
	}
	on_subject_free = {
		effect = {
			if = {
				limit = {
					ROOT = {
						original_tag = INS			
					}
				}
				ROOT = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = HOL_indonesia_commander
						}
						set_nationality = HOL
					}	
				}
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							original_tag = RAJ
							original_tag = MAL
						}
								
					}
				}
				ROOT = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = ENG_colonial_commander
						}
						set_nationality = ENG
					}	
				}
			}			
		}		
	}
###---> On Civil War End <><> <><> <><>
	#ROOT is winner #FROM gets annexed - This will also fire on_annex
	on_civil_war_end = {
		effect = {
			if = {
				limit = {
					FROM = {
						original_tag = USA
					}
				}
				every_country = {
					limit = {
						original_tag = CAN
					}
					remove_ideas = CAN_american_intervention
				}
			}
			#End of Turkish Civil War
			if = {
				limit = {
					FROM = {
						original_tag = TUR
						OR = {
							has_government = communism
							has_government = neutrality
						}
					}
					original_tag = TUR
					has_global_flag = TUR_civil_war
					NOT = {
						has_global_flag = TUR_civil_war_end
					}
				}
				country_event = { id = turkey.13 days = 1 }
			}
			
			if = {
				limit = {
					FROM = {
						original_tag = POR 
					}
				}
				every_country = {
					limit = {
						original_tag = POR
					}
					remove_ideas = POR_civil_war_surrender_debuff
				}
			}			
			if = {
				limit = {
					FROM = {
						original_tag = SPR
					}
				}
				every_country = {
					limit = {
						original_tag = SPR
					}
					remove_ideas = SPR_r56_non_intervention_agreement
					set_capital = 41
				}
			}			
			
			#End of SCW
			if = {
				limit = {
					FROM = {
						original_tag = GRE
					}
					ROOT = {
						original_tag = GRE
						has_government = fascism
					}
				}
				country_event = { id = greece.49 }
			}
			if = {
				limit = {
					FROM = {
						original_tag = GRE
					}
					ROOT = {
						original_tag = GRE
						has_government = communism
					}
				}
				country_event = { id = greece.47 }
			}				
			#spread revolution siam commies win
			if = {
				limit = {
					FROM = {
						original_tag = SIA
					}
					ROOT = {
						original_tag = SIA
					}
				}
				set_capital = 289
			}
			
			#spread revolution indo commies win
			if = {
				limit = {
					FROM = {
						original_tag = INS
					}
					ROOT = {
						original_tag = INS
					}
				}
				set_capital = 335
			}
			
			#spread revolution indian commies win
			if = {
				limit = {
					FROM = {
						original_tag = RAJ
					}
					ROOT = {
						original_tag = RAJ
						has_government = communism
					}
				}
				set_capital = 439
			}
			
			#spread revolution malay commies win
			if = {
				limit = {
					FROM = {
						original_tag = MAL
					}
					ROOT = {
						original_tag = MAL
						has_government = communism
					}
				}
				set_capital = 336
			}
			
			#Russian empire win
			if = {
				limit = {
					FROM = {
						original_tag = SOV
					}
					ROOT = {
						original_tag = SOV
						has_government = fascism
					}
				}
				set_capital = 195
			}
			if = {
				limit = {
					FROM = {
						original_tag = SWE
					}
					ROOT = {
						original_tag = SWE
					}
				}
				set_capital = 141
			}			
			#Fascist Wins Italian Civil War
			if = {
				limit = {
					FROM = {
						original_tag = ITA
					}
					ROOT = {
						original_tag = ITA
						has_government = fascism
					}
				}
				delete_unit_template_and_units = {
					division_template = "Black Shirts"
				}
			}			
			#Loyalist Wins Italian Civil War
			if = {
				limit = {
					FROM = {
						original_tag = ITA
					}
					ROOT = {
						original_tag = ITA
						has_government = neutrality
					}
				}
				delete_unit_template_and_units = {
					division_template = "Loyalist Milita"
				}
			}
			if = {
				limit = {
					FROM = {
						original_tag = CHL
					}
					ROOT = {
						original_tag = CHL
						NOT = { has_government = fascism }
					}
				}
				delete_unit_template_and_units = {
					division_template = "Anti-Nacistas Brigades"
				}
			}
			#put capital to Latium either way
			if = {
				limit = {
					FROM = {
						original_tag = ITA
					}
					ROOT = {
						original_tag = ITA
					}
				}
				set_capital = 2
			}
			#British civil war go back to London
			if = {
				limit = {
					FROM = {
						original_tag = ENG
					}
					ROOT = {
						original_tag = ENG
					}
				}
				set_capital = 126
			}			

			if = {
				limit = {
					FROM = {
						original_tag = PAR
					}
					ROOT = {
						original_tag = PAR
					}
				}
				set_capital = 301
			}
			#japanese civil war
			if = {
				limit = {
					FROM = {
						original_tag = JAP
					}
					ROOT = {
						original_tag = JAP
					}
				}
				set_capital = 282
			}

			#drop cosmetic tag
			if = {
				limit = {
					FROM = {
						original_tag = MAN
					}
					ROOT = {
						original_tag = MAN
						has_government = neutrality
					}
				}
				drop_cosmetic_tag = yes
			}

			#drop cosmetic tag
			if = {
				limit = {
					FROM = {
						original_tag = MAN
						has_government = neutrality
					}
					ROOT = {
						original_tag = MAN
						has_government = fascism
					}
				}
				set_country_flag = RFP_wins
				create_wargoal = {
					target = SOV
					type = annex_everything
				}
			}
			if = {
				limit = {
					FROM = {
						original_tag = MEX
					}
					ROOT = {
						original_tag = MEX
						controls_state = 277
					}
				}
				set_capital = 277
			}
			if = {
				limit = {
					FROM = {
						original_tag = POR
					}
					ROOT = {
						original_tag = POR
						controls_state = 112
					}
				}
				set_capital = 112
			}
			if = {
				limit = {
					FROM = {
						original_tag = ITA
					}
					ROOT = {
						original_tag = ITA
						controls_state = 2
					}
				}
				set_capital = 2
			}
			if = {
				limit = {
					FROM = {
						original_tag = ENG
					}
					ROOT = {
						original_tag = ENG
						controls_state = 126
					}
				}
				set_capital = 126
			}
			if = {
				limit = {
					FROM = {
						original_tag = CHL
					}
					ROOT = {
						original_tag = CHL
						controls_state = 279
					}
				}
				set_capital = 279
			}												
		}
	}
	
###---> On Declare War <><> <><> <><>
	on_declare_war = {

		effect = {

			# Give back POR focus tree to Salazarist Portugal if they win the civil war, copied from LAR
			if = {
				limit = {
					AND = {
						has_dlc = "La Resistance"
						NOT = {
							has_game_rule = {
								rule = POR_focus_tree_selection
								option = R56_TREE
							}
						}
					}
					original_tag = POR
					has_government = neutrality
					has_civil_war = yes
					FROM = {
						original_tag = POR
						OR = {
							has_government = fascism
							has_government = communism
						}
					}
				}
				load_focus_tree = { tree = portuguese_focus keep_completed = no }
				unlock_national_focus = POR_estado_novo
				unlock_national_focus = POR_support_the_spanish_nationalists
				unlock_national_focus = POR_portuguese_legion
				unlock_national_focus = POR_strengthen_the_regime
			}
			# Give back POR focus tree to Fascist Portugal if they win the civil war.
			if = {
				limit = {
					AND = {
						has_dlc = "La Resistance"
						NOT = {
							has_game_rule = {
								rule = POR_focus_tree_selection
								option = R56_TREE
							}
						}
					}
					original_tag = POR
					has_government = fascism
					has_civil_war = yes
					FROM = {
						original_tag = POR
						OR = {
							has_government = neutrality
							has_government = democratic
						}
					}
				}
				load_focus_tree = { tree = portuguese_focus keep_completed = no }
				unlock_national_focus = POR_estado_novo
				unlock_national_focus = POR_support_the_spanish_nationalists
				unlock_national_focus = POR_portuguese_legion
				unlock_national_focus = POR_national_syndicalism
			}


			if = {
				limit = {
					ROOT = {
						OR = {
							has_government = fascism
							has_government = communism
						}
												
					}
					FROM = {
						has_government = neutrality
						OR = {
							AND = {
								is_guaranteed_by = ENG
								ENG = {
									has_government = democratic
								}
							}
							AND = {
								is_guaranteed_by = FRA
								FRA = {
									has_government = democratic
								}
							}						
						}
						democratic < 0.3
						NOT = {
							has_country_flag = generic_guarantee_democratic_boost
						}
					}

				}
				FROM = {
					add_popularity = {
						ideology = democratic
						popularity = 0.25
					}
					set_country_flag = generic_guarantee_democratic_boost
				}						
			}

			#remove Italian control over Albania if they are at war
			if = {
				limit = {
					ROOT = {
						OR = {
							original_tag = ALB
							original_tag = ITA
						}						
					}
					FROM = {
						OR = {
							original_tag = ALB
							original_tag = ITA
						}
					}
				}
				ITA = {
					remove_resource_rights = 44
					remove_resource_rights = 797
				}
				ALB = {
					clr_country_flag = ALB_italian_resource_concessions
				}						
			}
			#Remove Soviet-Japanese oil agreement on North Sakhalin if they are at war.
			if = {
				limit = {
					ROOT = {
						OR = {
							original_tag = JAP
							original_tag = SOV
						}					
					}
					FROM = {
						OR = {
							original_tag = JAP
							original_tag = SOV
						}
					}
				}
				JAP = {
					remove_resource_rights = 655
					remove_opinion_modifier = { target = SOV modifier = JAP_SOV_sakhalin_oil_agreement }
				}						
			}
			#Japanese civil war			
			if = {
				limit = {
					ROOT = {
						original_tag = JAP
						has_government = fascism
						has_country_leader = {
							name = "Hirohito"
							ruling_only = yes
						}						
					}
					FROM = {
						original_tag = JAP
						has_government = neutrality
					}
				}
				ROOT = {
					create_country_leader = {
						name = "Hideki Tojo"
						desc = "Hideki Tojo"
						picture = "gfx/leaders/JAP/Portrait_Japan_Generic_land_2.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							army_connections
							r56_trait_opposed_to_democracy
							r56_trait_opposed_to_communism
						}
					}
				}
				FROM = {
					create_country_leader = {
						name = "Hirohito"
						desc = "POLITICS_Hirohito_DESC"
						picture = "Portrait_Japan_Hirohito.dds"
						expire = "1989.1.1"
						ideology = despotism
						traits = {
							warrior_code
							emperor_showa
						}
						id = 700 #Hirohito
					}				
				}
			}
			if = {
				limit = {
					ROOT = {
						original_tag = JAP
						has_government = neutrality						
					}
					FROM = {
						original_tag = JAP
						has_government = fascism
						has_country_leader = {
							name = "Hirohito"
							ruling_only = yes
						}					
					}
				}
				ROOT = {
					create_country_leader = {
						name = "Hirohito"
						desc = "POLITICS_Hirohito_DESC"
						picture = "Portrait_Japan_Hirohito.dds"
						expire = "1989.1.1"
						ideology = despotism
						traits = {
							warrior_code
							emperor_showa
						}
						id = 700 #Hirohito
					}
					
				}				
				FROM = {
					create_country_leader = {
						name = "Hideki Tojo"
						desc = "Hideki Tojo"
						picture = "gfx/leaders/JAP/Portrait_Japan_Generic_land_2.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							army_connections
							r56_trait_opposed_to_democracy
							r56_trait_opposed_to_communism	
						}
					}	
				}
			}
			#democratic civil war
			if = {
				limit = {
					ROOT = {
						original_tag = JAP
						has_government = democratic						
					}
					FROM = {
						original_tag = JAP
						has_government = fascism
						#has_country_leader = {
						#	name = "Hirohito"
						#	ruling_only = yes
						#}					
					}
				}
				ROOT = {
					#add hirohito idea here if not added by showa consitution focus.
					if = {
						limit = {
							NOT = {
								has_completed_focus = JAP_strengthen_civilian_government
							}
						}
						add_ideas = JAP_hirohito
					}
					
				}				
				FROM = {
					create_country_leader = {
						name = "Hideki Tojo"
						desc = "Hideki Tojo"
						picture = "gfx/leaders/JAP/Portrait_Japan_Generic_land_2.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							army_connections
							r56_trait_opposed_to_democracy
							r56_trait_opposed_to_communism							
						}
					}
					add_war_support = 0.8
					set_cosmetic_tag = JAP2	
				}
			}
			#Horthy-Horthy civil war				
			if = {
				limit = {
					ROOT = {
						original_tag = HUN
						has_government = fascism
						has_country_leader = {
							name = "Miklós Horthy"
							ruling_only = yes
						}						
					}
					FROM = {
						original_tag = HUN
						has_government = neutrality
					}
				}
				ROOT = {
					create_country_leader = {
						name = "Ferenc Szalasi"
						desc = "POLITICS_FERENC_SZALASI_DESC"
						picture = "gfx/leaders/HUN/r56_portrait_HUN_Ferenc_Szalasi.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							anti_communist
							fascist_militia_leader
						}
					}
					set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }					
				}
			}
			if = {
				limit = {
					ROOT = {
						original_tag = HUN
						has_government = neutrality						
					}
					FROM = {
						original_tag = HUN
						has_government = fascism
						NOT = {
							has_country_leader = {
								name = "Ferenc Szalasi"
								ruling_only = yes
							}							
						}
					}
				}
				FROM = {
					create_country_leader = {
						name = "Ferenc Szalasi"
						desc = "POLITICS_FERENC_SZALASI_DESC"
						picture = "gfx/leaders/HUN/r56_portrait_HUN_Ferenc_Szalasi.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							anti_communist
							fascist_militia_leader
						}
					}
					set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }					
				}
			}
			# Colonial dutch side with Colonial government

			if = {
				limit = {
					FROM = {
						original_tag = INS
						is_puppet_of = HOL				
					}
				}
				ROOT = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = HOL_indonesia_commander
						}
						set_nationality = FROM
					}
					
				}
			}
			if = {
				limit = {
					ROOT = {
						original_tag = INS
						is_puppet_of = HOL				
					}
				}
				FROM = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = HOL_indonesia_commander
						}
						set_nationality = ROOT
					}
					
				}
			}						
			# Chinese Civil war Chiang fascist
			if = {
				limit = {
					ROOT = {
						original_tag = CHI
						has_government = fascism
						has_country_leader = {
							name = "Chiang Kai-Shek"
							ruling_only = yes
						}						
					}
					FROM = {
						original_tag = CHI
						has_government = neutrality
						has_country_leader = {
							name = "Chiang Kai-Shek"
							ruling_only = yes
						}						
					}
				}
				FROM = {
					retire_country_leader = yes	
					create_country_leader = {
						name = "Li Jishen"
						desc = ""
						picture = "gfx/leaders/JAP/Portrait_Japan_Generic_land_4.dds"
						expire = "1965.1.1"
						ideology = moderatism
						traits = {
							
						}
					}							
				}
			}
			if = {
				limit = {
					ROOT = {
						original_tag = HUN
						has_government = neutrality						
					}
					FROM = {
						original_tag = HUN
						has_government = fascism
						NOT = {
							has_country_leader = {
								name = "Ferenc Szalasi"
								ruling_only = yes
							}							
						}
					}
				}
				FROM = {
					create_country_leader = {
						name = "Ferenc Szalasi"
						desc = "POLITICS_FERENC_SZALASI_DESC"
						picture = "gfx/leaders/HUN/r56_portrait_HUN_Ferenc_Szalasi.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							anti_communist
							fascist_militia_leader
						}
					}
					set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }					
				}
			}			
			#Italian civil war			
			if = {
				limit = {
					ROOT = {
						original_tag = ITA
						has_government = fascism
						has_idea = victor_emmanuel						
					}
					FROM = {
						original_tag = ITA
						has_government = neutrality
					}
				}
				ROOT = {
					remove_ideas = victor_emmanuel
					set_cosmetic_tag = ITA_RSI
					set_party_name = { 
						ideology = fascism 
						long_name = "Partito Fascista Repubblicano"
						name = "PFR"
					}						
				}
			}
			if = {
				limit = {
					ROOT = {
						original_tag = ITA
						has_government = neutrality						
					}
					FROM = {
						original_tag = ITA
						has_government = fascism
						has_idea = victor_emmanuel							
					}
				}
				
				FROM = {
					remove_ideas = victor_emmanuel
					set_cosmetic_tag = ITA_RSI
					set_party_name = { 
						ideology = fascism 
						long_name = "Partito Fascista Repubblicano"
						name = "PFR"
					}						
				}
			}
			#Indian civil war			
			if = {
				limit = {
					FROM = {
						original_tag = RAJ
						has_government = neutrality
						is_puppet_of = ENG
					}
				}
				FROM = {
					set_cosmetic_tag = RAJ_UK				
				}
			}										
			if = {
				limit = {
					OR = {
						AND = {
							tag = GER
							FROM = { tag = SOV }
						}
						AND = {
							tag = SOV
							FROM = { tag = GER }
						}
					}
					GER = { has_completed_focus = GER_soviet_invasion }
				}
				hidden_effect = {
					GER = { 
						add_timed_idea = { idea = GER_barbarossa days = 180 }
						activate_mission = GER_barbarossa_mission
					}
				}
			}
			
			if = {
				limit = {
					ROOT = {
						TAG = GER
					}
					FROM = {
						TAG = SOV
					}
				}
				POL = { remove_ideas = POL_Ribbentrop_Beck_Pact }
			}
			
			if = {
				limit = {
					OR = {
						AND = {
							FROM = {
								tag = JAP
							}
							tag = USA
						}
						AND = {
							FROM = {
								tag = USA
							}
							tag = JAP
						}
					}
					has_global_flag = MAN_will_join_usa
					MAN = {
						is_puppet_of = JAP
					}
				}
				MAN = {
					overlord = {
						set_autonomy = {
							target = MAN
							autonomy_state = autonomy_free
						}
					}
				}
				USA = {
					set_autonomy = {
						target = MAN
						autonomy_state = autonomy_puppet
					}
					set_autonomy = {
						target = MAN
						autonomy_state = autonomy_free
					}
					if = {
						limit = {
							is_in_faction = no
						}
						create_faction = mck_liberate
						add_to_faction = MAN
						else = {
							random_country = {
								limit = {
									OR = {
										is_in_faction_with = USA
										tag = USA
									}
									is_faction_leader = yes
								}
								add_to_faction = MAN
							}
						}
					}
				}
				MAN = {
					declare_war_on = {
						target = JAP
						type = annex_everything
					}
					hidden_effect = {
						set_politics = {
							ruling_party = democratic
							elections_allowed = no
						}
						set_political_party = {
							ideology = communism
							popularity = 0
						}
						set_political_party = {
							ideology = fascism
							popularity = 5
						}
						set_political_party = {
							ideology = neutrality
							popularity = 20
						}
						set_political_party = {
							ideology = democratic
							popularity = 80
						}
					}
					add_to_war = {
						targeted_alliance = USA
						enemy = JAP
					}
					if = {
						limit = {
							has_idea = MAN_dongbei_partisan
						}
						remove_ideas = MAN_dongbei_partisan
					}
					if = {
						limit = {
							has_idea = MAN_dongbei_partisan_pacified
						}
						remove_ideas = MAN_dongbei_partisan_pacified
					}
				}
			}
		
			#remove chi ger opinion
			if = {
				limit = {
					OR = {
						AND = {
							FROM = {
								tag = CHI
							}
							ROOT = {
								tag = GER
							}
						}
						AND = {
							ROOT = {
								tag = CHI
							}
							FROM = {
								tag = GER
							}
						}
					}
					CHI = {
						has_opinion_modifier = sino_german_cooperation
					}
					GER = {
						has_opinion_modifier = sino_german_cooperation
					}
				}
				CHI = {
					remove_opinion_modifier = {
						target = GER
						modifier = sino_german_cooperation
					}
					remove_opinion_modifier = {
						target = GER
						modifier = more_sino_german_coop
					}
				}
				GER = {
					remove_opinion_modifier = {
						target = CHI
						modifier = sino_german_cooperation
					}
					remove_opinion_modifier = {
						target = CHI
						modifier = more_sino_german_coop
					}
				}
			}
			
			#gain buff when against commie - f
			if = {
				limit = {
					FROM = {
						has_idea = KMT_resist_the_reds
						NOT = {
							has_idea = KMT_anti_communism_sentiment
						}
					}
					ROOT = {
						has_government = communism
					}
				}
				FROM = {
					add_ideas = KMT_anti_communism_sentiment
				}
			}
			
			#gain buff when against commie - r
			if = {
				limit = {
					ROOT = {
						has_idea = KMT_resist_the_reds
						NOT = {
							has_idea = KMT_anti_communism_sentiment
						}
					}
					FROM = {
						has_government = communism
					}
				}
				ROOT = {
					add_ideas = KMT_anti_communism_sentiment
				}
			}
			
			#russian civil war
			if = {
				limit = {
					ROOT = {
						original_tag = MAN
						has_country_flag = RFP_wins
					}
					FROM = {
						tag = SOV
					}
				}
				SOV = {
					start_civil_war = {
						ideology = fascism
						capital = 408
						states = { 408 409 560 657 655 537 561 563 }
					}
				}
				random_country = {
					limit = {
						original_tag = SOV
						has_government = fascism
					}
					create_faction = rfp_white_movement
					add_timed_idea = {
						idea = MAN_RFP_white_movement
						days = 1700
					}
					hidden_effect = {
						load_oob = "RFP_anti_bolshelvik"
					}
					annex_country = {
						target = ROOT
						transfer_troops = yes
					}
				}
			}
			
			#set flag for warred with jap
			if = {
				limit = {
					OR = {
						AND = {
							ROOT = { tag = CHI }
							FROM = { tag = JAP }
						}
						AND = {
							ROOT = { tag = JAP }
							FROM = { tag = CHI }
						}
					}
				}
				set_global_flag = CHI_warred_with_JAP
			}
			
			#change to wartime corruption
			if = {
				limit = {
					OR = {
						FROM = { tag = CHI }
						ROOT = { tag = CHI }
					}
					CHI = {
						OR = {
							has_idea = KMT_corrupted_government
							has_idea = KMT_corrupted_government_lesser
						}
					}
				}
				CHI = {
					country_event = { id = kmt.272 }
				}
			}
			
			#set flag
			if = {
				limit = {
					NOT = {
						has_global_flag = west_expedition_started
					}
					FROM = { tag = XSM }
					ROOT = {
						tag = PRC
						has_completed_focus = PRC_west_expedition
					}
				}
				set_global_flag = west_expedition_started
			}
			
			#strike prc when west-expedition-ing
			if = {
				limit = {
					FROM = { tag = PRC }
					tag = CHI
					PRC = {
						is_in_faction = no
						has_war_with = XSM
					}
					has_global_flag = west_expedition_started
				}
				PRC = {
					country_event = { id = prc.53 }
				}
			}
			
			#get revanchism when war with jap
			if = {
				limit = {
					has_idea = PRC_anti_jap_sentiment
					NOT = {
						has_idea = PRC_revanchism
					}
					FROM = { tag = JAP }
				}
				country_event = { id = prc.107 }
			}
			
			#pop tips for central government
			## You cannot trigger this when join others' war against the central government, since it would not be legitimate
			if = {
				limit = {
					OR = {
						has_country_flag = KMT_central_government_flag
						FROM = {
							has_country_flag = KMT_central_government_flag
						}
					}
				}
				country_event = { id = prc.107 }
			}
			
			if = {
				limit = {
					OR = {
						has_country_flag = KMT_central_government_flag
						FROM = {
							has_country_flag = KMT_central_government_flag
						}
					}
				}
				country_event = { id = prc.107 }
			}
			
			if = {
				limit = {
					OR = {
						AND = {
							tag = CHI
							FROM = { tag = JAP }
						}
						AND = {
							tag = JAP
							FROM = { tag = CHI }
						}
					}
					country_exists = MEN
				}
				set_global_flag = KMT_MEN_trigger_by_on_action
			}	
			
			if = {
				limit = {
					NOT = {
						has_global_flag = PRC_restart_chinese_civil_war
					}
					OR = {
						AND = {
							tag = PRC
							FROM = {
								tag = CHI
							}
						}
						AND = {
							tag = CHI
							FROM = {
								tag = PRC
							}
						}
					}
				}
				PRC = {
					country_event = { id = china.108 }
					if = {
						limit = {
							NOT = {
								has_completed_focus = PRC_found_our_nation
							}
						}
						drop_cosmetic_tag = yes
						set_cosmetic_tag = GCDcivilwar
						set_global_flag = PRC_civil_war_started
					}
				}
			}
		}
	}
	
###---> On Government Change <><> <><> <><>
	on_government_change = {
		effect = {
			#Game rule that should avoid the idea related to said rule if the country is non aligned and readd it if it's not.
#			if = {
#				limit = {
#					has_game_rule = {
#						rule = ideology_join_faction
#						option = SAME_IDEOLOGY_EXCEPT_NON_ALIGNED
#					}
#					NOT = {
#						has_government = neutrality
#					}					
#				}			
#
#				add_ideas = generic_can_only_join_factions_same_ideology
#			}
#			if = {
#				limit = {
#					has_game_rule = {
#						rule = ideology_join_faction
#						option = SAME_IDEOLOGY_EXCEPT_NON_ALIGNED
#					}
#					has_government = neutrality				
#				}			
#
#				remove_ideas = generic_can_only_join_factions_same_ideology
#			}			
			if = {
				limit = {
					ROOT = {
						original_tag = CRO
						country_exists = YUG
						YUG = {
							has_government = communism
							has_country_leader = {
								name = "Josip Broz Tito"
								ruling_only = yes
							}						
						}
						has_country_leader = {
							name = "Josip Broz Tito"
							ruling_only = yes
						}				
					}
				}
				ROOT = {
					retire_country_leader = yes	
				}
			}

			#ensure that concessions are removed in Albania if fascist regime collapse
			if = {
				limit = {
					tag = ITA
					country_exists = ALB
				}
				ITA = {
					remove_resource_rights = 44
					remove_resource_rights = 797
				}
				ALB = {
					clr_country_flag = ALB_italian_resource_concessions
				}				
			}

			if = {
				limit = {
					tag = MAN
					has_government = neutrality
					OR = {
						country_exists = CHI
						country_exists = PRC
					}
				}
				if = {
					limit = {
						country_exists = CHI
					}
					CHI = { country_event = { id = kmt.275 }}
					else = {
						if = {
							limit = {
								country_exists = PRC
							}
							PRC = { country_event = { id = kmt.275 }}
						}
					}
				}
			}
			
			if = {
				limit = {
					tag = MAN
					NOT = {
						has_government = fascism
						OR = {
							has_global_flag = JAP_grant_MAN_independence
							has_completed_focus = MAN_call_usa_to_act
							has_completed_focus = MAN_coronation
							has_completed_focus = MAN_independence_war
						}
					}
					is_puppet_of = JAP
				}
				overlord = {
					country_event = { id = jap.57 }
				}
			}
			
			if = {
				limit = {
					tag = CHI
					has_government = democratic
					NOT = {
						has_country_flag = KMT_party_chosen
					}
				}
				country_event = { id = kmt.279 }
			}
			
			if = {
				limit = {
					tag = CHI
					has_government = fascism
					is_puppet = no
					NOT = {
						has_completed_focus = KMT_support_pro_japanese_faction
					}
				}
				set_party_name = { ideology = fascism long_name = CKS_regime name = CKS_regime }
				create_country_leader = {
					name = "Chiang Kai-Shek"
					desc = "POLITICS_CHIANG_KAI-SHEK_DESC"
					picture = "gfx/leaders/CHI/r56_portrait_CHI_Chiang_Kai_Shek.dds"
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {
						army_connections
					}
				}
			}

			if = {
				limit = {
					original_tag = AST
					AST = {
						has_government = fascism
						has_completed_focus = AST_R56_australia_first
					}
				}
				set_cosmetic_tag = AST_ALT
			}

			if = {
				limit = {
					original_tag = PAR
					PAR = {
						has_government = fascism
						has_country_flag = PAR_franco_in_power
					}
				}
				PAR = {
					retire_ideology_leader = neutrality
				}
			}
		}
	}
	
###---> On Join Allies <><> <><> <><>
	on_join_allies = {
		effect = {
			
			#gain buff when against commie - f
			if = {
				limit = {
					any_country = {
						has_idea = KMT_resist_the_reds
						has_war_with = ROOT
						has_war_with = FROM
					}
					ROOT = {
						has_government = communism
					}
				}
				every_other_country = {
					limit = {
						has_idea = KMT_resist_the_reds
						NOT = {
							has_idea = KMT_anti_communism_sentiment
						}
						has_war_with = ROOT
						has_war_with = FROM
					}
					country_event = { id = kmt.252 hours = 1 }
				}
			}
			
			#gain buff when against commie - r
			if = {
				limit = {
					ROOT = {
						has_idea = KMT_resist_the_reds
						NOT = {
							has_idea = KMT_anti_communism_sentiment
						}
					}
					any_country = {
						has_government = communism
						has_war_with = ROOT
						has_war_with = FROM
					}
				}
				ROOT = {
					country_event = { id = kmt.252 hours = 1 }
				}
			}

			#change to wartime corruption
			if = {
				limit = {
					tag = CHI
					OR = {
						has_idea = KMT_corrupted_government
						has_idea = KMT_corrupted_government_lesser
					}
				}
				country_event = { id = kmt.272 hours = 1 }
			}
		}
	}
	
###---> On New Term Election <><> <><> <><>
	on_new_term_election = {
		effect = {
			if = {
				limit = {
					tag = CHI
					has_government = neutrality
					NOT = {
						has_country_flag = KMT_party_chosen
					}
				}
				country_event = { id = kmt.279 }
			}
			if = {
				limit = {
					original_tag = MEX
					has_country_flag = election_1940
				}
				MEX = {
					country_event = { id = mexico_1940.4 }
				}
			}
			if = {
				limit = { tag = AST }
				country_event = { id = r56_australia.8 }
				country_event = { id = r56_australia.9 }
				country_event = { id = r56_australia.10 }
				country_event = { id = r56_australia.11 }
				country_event = { id = r56_australia.12 }
			}
		}
	}
	
###---> On Puppet <><> <><> <><>
	on_puppet = {
		effect = {	
			## Remove political advisors

			if = {
				limit = {
					has_government = communism
				}
				if = {
					limit = {
						has_idea_with_trait = democratic_reformer
					}
					remove_ideas_with_trait = democratic_reformer
				}
				if = {
					limit = {
						has_idea_with_trait = staunch_monarchist
					}
					remove_ideas_with_trait = staunch_monarchist
				}
				if = {
					limit = {
						has_idea_with_trait = fascist_demagogue
					}
					remove_ideas_with_trait = fascist_demagogue
				}								
			}
			if = {
				limit = {
					has_government = democratic
				}
				if = {
					limit = {
						has_idea_with_trait = communist_revolutionary
					}
					remove_ideas_with_trait = communist_revolutionary
				}
				if = {
					limit = {
						has_idea_with_trait = staunch_monarchist
					}
					remove_ideas_with_trait = staunch_monarchist
				}
				if = {
					limit = {
						has_idea_with_trait = fascist_demagogue
					}
					remove_ideas_with_trait = fascist_demagogue
				}								
			}						

			if = {
				limit = {
					has_government = neutrality
				}
				if = {
					limit = {
						has_idea_with_trait = communist_revolutionary
					}
					remove_ideas_with_trait = communist_revolutionary
				}
				if = {
					limit = {
						has_idea_with_trait = democratic_reformer
					}
					remove_ideas_with_trait = democratic_reformer
				}
				if = {
					limit = {
						has_idea_with_trait = fascist_demagogue
					}
					remove_ideas_with_trait = fascist_demagogue
				}								
			}

			if = {
				limit = {
					has_government = fascism
				}
				if = {
					limit = {
						has_idea_with_trait = communist_revolutionary
					}
					remove_ideas_with_trait = communist_revolutionary
				}
				if = {
					limit = {
						has_idea_with_trait = democratic_reformer
					}
					remove_ideas_with_trait = democratic_reformer
				}
				if = {
					limit = {
						has_idea_with_trait = staunch_monarchist
					}
					remove_ideas_with_trait = staunch_monarchist
				}								
			}			
			if = {
                limit = {
                    tag = KOR
					has_government = neutrality              
                    FROM = {
						OR = {
							original_tag = CHI
							original_tag = PRC
							original_tag = GXC
							original_tag = YUN
							original_tag = SHX
							original_tag = XSM
							original_tag = SIK
						}
					}
                }
				create_country_leader = {
					name = "Kim Gu"
					desc = ""
					picture = "gfx/leaders/KOR/r56_portrait_Kim_Gu.dds"
					expire = "1965.1.1"
					ideology = moderatism
					traits = {
						#
					}
				}
				retire_ideology_leader = democratic
				set_cosmetic_tag = KOR_tutelage
			
				if = {
					limit = {
						NOT = {
							has_global_flag = korean_exiled_government_generals
						}
					}
					set_global_flag = korean_exiled_government_generals
					KOR = {
						kill_ideology_leader = neutrality
						create_field_marshal = {
							name = "Ji Cheong-cheon"
							portrait_path = "gfx/leaders/Asia/Portrait_Asia_Generic_land_3.dds"
							traits = { defensive_doctrine guerilla_fighter }
							skill = 2
							attack_skill = 2
							defense_skill = 2
							planning_skill = 1
							logistics_skill = 2
						}
						create_corps_commander = {
							name = "Lee Beom-seok"
							portrait_path = "gfx/leaders/Asia/Portrait_Asia_Generic_land_1.dds"
							traits = { expert_delegator }
							skill = 2
							attack_skill = 1
							defense_skill = 2
							planning_skill = 1
							logistics_skill = 3
						}				
					}				
				}				
				#Historical and ironic what more do you want.
				set_party_name = { 
					ideology = neutrality 
					long_name = KOR_neutrality_party_independence_long
					name = KOR_neutrality_party_independence 
				}					
			}
			

			if = {
                limit = {
                    original_tag = SOV
					has_government = neutrality              
                    FROM = {
						OR = {
							original_tag = FRA
							original_tag = AUS
							original_tag = HUN
							original_tag = PER
							original_tag = BEL
							AND = {
								original_tag = SPR
								NOT = {
									has_country_leader = {
										name = "Anarchist Commune"
										ruling_only = yes
									}
								}
							}
							original_tag = JAP
							original_tag = ROM
							original_tag = BUL
							original_tag = GER
							original_tag = PRE
							original_tag = BAY
							original_tag = WUR
							original_tag = MEK
							original_tag = SHL
							original_tag = SAX
							original_tag = HAN
							original_tag = DEN
							original_tag = SWE
							original_tag = NOR
							original_tag = CAN
							original_tag = JOR
							original_tag = IRQ
							original_tag = GRE
							original_tag = YUG	
							original_tag = HOL
							original_tag = MAN
							original_tag = ARM
							original_tag = EGY
							original_tag = SAU
							original_tag = ITA

							AND = {
								original_tag = POR
								has_country_leader = {
									name = "Dom Duarte Nuno"
									ruling_only = yes
								}								
							}
							AND = {
								original_tag = BRA
								has_country_leader = {
									name = "Pedro III"
									ruling_only = yes
								}								
							}
							AND = {
								original_tag = USA
								has_country_leader = {
									name = "Wallis I"
									ruling_only = yes
								}								
							}
							AND = {
								original_tag = HON
								has_country_leader = {
									name = "Juan III"
									ruling_only = yes
								}								
							}																					
							
						}
					}
					has_government = neutrality
                }
				set_party_name = {
					ideology = neutrality
					long_name = r56_SOV_neu_long
					name = r56_SOV_neu_short
				}
			 	create_country_leader = {
					name = "Kirill Vladimirovich"
					desc = "POLITICS_KIRIL_VLADIMIROVICH_DESC"
					picture = "r56_portrait_SOV_Kirill_Vladimirovich_Romanov.dds"
					expire = "1965.1.1"
					ideology = absolute_monarchism
					traits = {
					}
				}
			}

			#Make Britain called England
			if = {
                limit = {
                    AND = {
                        ENG = { exists = yes }
                        SCO = { exists = yes }
                        WLS = { exists = yes }            
                    }
                }
                ENG = { set_cosmetic_tag = ENG_england }
			}
			if = {
                limit = {
                    tag = HUN
                    has_focus_tree = hungarian_focus
					has_government = communism              
                    
                }
				unlock_national_focus = HUN_economic_intervention
				unlock_national_focus = HUN_council_of_peoples_commissars
				unlock_national_focus = HUN_assassinate_horthy
			}
			if = {
                limit = {
					tag = HUN
					has_focus_tree = hungarian_focus
					has_idea = HUN_strengthen_fascists
					NOT = {
						has_government = fascism    
					}    
                }
                remove_ideas = HUN_strengthen_fascists
			}
			if = {
                limit = {
					tag = HUN
					has_focus_tree = hungarian_focus
					has_completed_focus = HUN_strengthen_fascists
					NOT = {
						has_idea = HUN_strengthen_fascists
					}
					has_government = fascism    
					    
                }
                add_ideas = HUN_strengthen_fascists
			}									
			#Ensures that Carpatho Ukraine has a Magyarone in power if they are non aligned puppet of Hungary
			if = {
				limit = {
					AND = { 
						original_tag = RUT
						is_puppet_of = HUN
						HUN = { 
							has_government = neutrality
						}
					}
				}
				create_country_leader = {
					name = "Stefan Fentsyk"
					desc = ""
					picture = "gfx/leaders/Europe/r56_portrait_generic_europe_augustyn_czartoryski.dds"
					expire = "1965.1.1"
					ideology = moderatism
					traits = {
						silent_workhorse
					}
				}
			}			
			#Changing names and leaders of Poland					
			if = {
				limit = {
					TAG = POL
				}
				POL = { remove_ideas = POL_Sanacja_Government }
				if = { 
					limit = { has_unit_leader = 3180 }
					remove_unit_leader = 3180
				}
			}
			
			if = {
				limit = {
					AND = {
						TAG = POL
						SOV = { has_country_flag = SOV_purge_started }
						NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
						NOT = { has_completed_focus = POL_Seek_Autonomy }
						NOT = { has_country_flag = PPS_Revolutionary_Path }
					}
				}
				create_country_leader = {
					name = "Tymczasowy Rząd Jedności Narodowej"
					desc = "PROVISIONAL_GOVERNMENT_OF_NATIONAL_UNITY_DESC"
					picture = "r56_portrait_POL_Provisional_Government_of_National_Unity.dds"
					expire = "1965.1.1"
					ideology = stalinism
					traits = {
					}
				}
			}
			if = {
				limit = {
					AND = { 
						TAG = POL
						is_puppet_of = SOV
						POL = { 
							has_government = communism
							NOT = { has_completed_focus = POL_The_Endecja_Movement }
							NOT = { has_completed_focus = POL_The_Polish_Socialist_Party }
						}
					}
				}
				POL = { set_party_name = { ideology = democratic long_name = POL_PSL_long name = POL_PSL_party } }
			}
			if = {
				limit = {
					AND = { 
						TAG = POL
						is_subject_of = SOV
						POL = { 
							has_government = communism
							NOT = { has_completed_focus = POL_Seek_Autonomy }
							NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
						}
					}
				}
				POL = { set_party_name = { ideology = communism long_name = POL_ZPP_party_long name = POL_ZPP_party } }
				drop_cosmetic_tag = yes
				create_country_leader = {
					name = "Tymczasowy Rząd Jedności Narodowej"
					desc = "PROVISIONAL_GOVERNMENT_OF_NATIONAL_UNITY_DESC"
					picture = "r56_portrait_POL_Provisional_Government_of_National_Unity.dds"
					expire = "1965.1.1"
					ideology = stalinism
					traits = {
					}
				}
				if = {
					limit = {
						NOT = { has_unit_leader = 3179 }
						SOV = { NOT = { has_country_flag = purge_1_group_b } }
					}
					create_field_marshal = {
						name = "Konstanty Rokossowski"
						picture = "r56_portrait_POL_Konstanty_Rokossowski.dds"
						traits = { politically_connected panzer_leader panzer_expert offensive_doctrine thorough_planner aggressive_assaulter }
						id = 3179
						skill = 5
						attack_skill = 5
						defense_skill = 2
						planning_skill = 5
						logistics_skill = 4
					}
				}
				if = {
					limit = { NOT = { has_unit_leader = 3156 } }
					create_field_marshal = {
						name = "Michał Rola-Żymierski"
						picture = "r56_portrait_POL_r56_portrait_POL_Michal_Rola_Zymierski.dds"
						traits = { politically_connected career_officer logistics_wizard aggressive_assaulter }
						id = 3156
						skill = 3
						attack_skill = 3
						defense_skill = 2
						planning_skill = 3
						logistics_skill = 2
					}
				}
				if = {
					limit = { NOT = { has_unit_leader = 3157 } }
					create_field_marshal = {
						name = "Zygmunt Berling"
						picture = "r56_portrait_POL_Zygmunt_Berling.dds"
						traits = { politically_connected career_officer infantry_officer inspirational_leader }
						id = 3157
						skill = 1
						attack_skill = 2
						defense_skill = 1
						planning_skill = 1
						logistics_skill = 1
					}
				}
				if = {
					limit = { NOT = { has_unit_leader = 3177 } }
					create_corps_commander = {
						name = "Stanisław Popławski"
						picture = "r56_portriat_POL_Stanislav_Poplavsky.dds"
						traits = { trait_reckless harsh_leader skilled_staffer }
						id = 3177
						skill = 3
						attack_skill = 4
						defense_skill = 2
						planning_skill = 2
						logistics_skill = 2
					}
				}
				if = {
					limit = { NOT = { has_unit_leader = 3178 } }
					create_corps_commander = {
						name = "Karol Świerczewski"
						picture = "r56_portrait_POL_Karol_Swierczewski.dds"
						traits = { substance_abuser harsh_leader }
						id = 3178
						skill = 1
						attack_skill = 1
						defense_skill = 1
						planning_skill = 1
						logistics_skill = 1
					}
				}
				if = { limit = { has_unit_leader = 3129 }
					remove_unit_leader = 3129 }
				if = { limit = { has_unit_leader = 3155 }
					remove_unit_leader = 3155 }
				if = { limit = { has_unit_leader = 3154 }
					remove_unit_leader = 3154 }
				if = { limit = { has_unit_leader = 3131 }
					remove_unit_leader = 3131 }
				if = { limit = { has_unit_leader = 3132 }
					remove_unit_leader = 3132 }
				if = { limit = { has_unit_leader = 3134 }
					remove_unit_leader = 3134 }
				if = { limit = { has_unit_leader = 3133 }
					remove_unit_leader = 3133 }
				if = { limit = { has_unit_leader = 3135 }
					remove_unit_leader = 3135 }
				if = { limit = { has_unit_leader = 3136 }
					remove_unit_leader = 3136 }
				if = { limit = { has_unit_leader = 3151 }
					remove_unit_leader = 3151 }
				if = { limit = { has_unit_leader = 3152 }
					remove_unit_leader = 3152 }
				if = { limit = { has_unit_leader = 3153 }
					remove_unit_leader = 3153 }
				if = { limit = { has_unit_leader = 3128 }
					remove_unit_leader = 3128 }
				if = { limit = { has_unit_leader = 3130 }
					remove_unit_leader = 3130 }
			}
			if = {
				limit = { 
					AND = { 
						TAG = POL
						is_puppet_of = GER
					}
				}
				POL = { set_cosmetic_tag = POLG }
				POL = { set_party_name = { ideology = fascism long_name = GER_fascism_party_long name = GER_fascism_party } }
				create_country_leader = {
					name = "Hans Frank"
					desc = "HANS_FRANK_DESC"
					picture = "r56_portrait_POL_Hans_Frank.dds"
					expire = "1965.1.1"
					ideology = nazism
					traits = {
						prince_of_terror
						governor_general
					}
				}
				create_country_leader = {
					name = "Fryderyk Krystian Wettyn"
					desc = "FRYDERYK_KRYSTIAN_WETTYN_DESC"
					picture = "r56_portrait_POL_Fryderyk_Krystian_Wettyn.dds"
					expire = "1965.1.1"
					ideology = despotism
					traits = {
						POL_king_of_poland
						POL_german_origins
						r56_trait_opposed_to_communism
					}
				}
			}

			if = {
				limit = { 
					ROOT = { tag = CHI }
					FROM = { tag = JAP }
					JAP = {
						has_government = fascism
					}
				}
				create_country_leader = {
					name = "Wang Jingwei"
					desc = "POLITICS_WANG_JINGWEI_DESC"
					picture = "gfx/leaders/CHI/r56_portrait_CHI_Wang_Jingwei.dds"
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {
						#
					}
				}
				set_party_name = { ideology = fascism long_name = KMT_wjw name = KMT_wjw }														  
			}

			if = {
				limit = { 
					ROOT = { tag = CHI }
					FROM = { tag = JAP }
					JAP = {
						has_government = neutrality
					}
				}
				create_country_leader = {
					name = "Wang Jingwei"
					desc = "POLITICS_WANG_JINGWEI_DESC"
					picture = "gfx/leaders/CHI/r56_portrait_CHI_Wang_Jingwei.dds"
					expire = "1965.1.1"
					ideology = despotism
					traits = {
						#
					}
				}
				set_party_name = { ideology = neutrality long_name = KMT_wjw name = KMT_wjw }														  
			}
			if = {
				limit = { 
					ROOT = { tag = MAN }
					FROM = { tag = JAP }
					JAP = {
						has_government = neutrality
					}
				}
				create_country_leader = {
					name = "Aisin Gioro Pujie"
					desc = "POLITICS_PUJIE_DESC"
					picture = "gfx/leaders/MAN/r56_portrait_MAN_Aisin_Gioro_Pujie.dds"
					expire = "1965.1.1"
					ideology = despotism
					traits = {
						#
					}
				}
				set_party_name = { ideology = neutrality long_name = KMT_wjw name = KMT_wjw }														  
			}			

			if = {
				limit = { 
					ROOT = { 
						tag = HUN
						NOT = {
							has_global_flag = align_hungary_puppet_check
						} 
					}
				}
				create_country_leader = {
					name = "Ferenc Szalasi"
					desc = "POLITICS_FERENC_SZALASI_DESC"
					picture = "gfx/leaders/HUN/r56_portrait_HUN_Ferenc_Szalasi.dds"
					expire = "1965.1.1"
					ideology = nazism
					traits = {
						anti_communist
						fascist_militia_leader
					}
				}
				set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }												  
			}
			if = {
				limit = { 
					ROOT = { 
						tag = HUN
						has_global_flag = align_hungary_puppet_check	 
					}
				}
				clr_global_flag = align_hungary_puppet_check												  
			}			
			
			if = {
				limit = {
					ROOT = {
						tag = ZIM
					}
					FROM = {
						NOT = {
							tag = ENG
						}
					}
				}
				ZIM = {
					drop_cosmetic_tag = yes #british colony flag
				}
			}
			
			if = {
				limit = {
					ROOT = {
						tag = ZIM
					}
					FROM = {
						tag = ENG
					}
				}
				ZIM = {
					set_cosmetic_tag = ZIM_ENG
				}
			}
			if = {
				limit = {
					ROOT = {
						tag = ITA
					}
					FROM = {
						OR = {
							original_tag = GER
							original_tag = USA
							AND = {
								original_tag = FRA
								has_country_leader = {
									name = "Jacques Doriot"
									ruling_only = yes
								}
							}
						}
						
						has_government = fascism
					}
				}
				ROOT = {
					remove_ideas = victor_emmanuel
					set_cosmetic_tag = ITA_RSI
					set_party_name = { 
						ideology = fascism 
						long_name = "Partito Fascista Repubblicano"
						name = "PFR"
					}						
				}						
			}			
		}
	}
	
###---> On Release As Puppet <><> <><> <><>
	on_release_as_puppet = {
		effect = {
			if = {
				limit = {
					ROOT = {
						tag = ITA
					}
					FROM = {
						OR = {
							original_tag = GER
							original_tag = USA
							original_tag = POL
							original_tag = IRE
							AND = {
								original_tag = FRA
								has_country_leader = {
									name = "Jacques Doriot"
									ruling_only = yes
								}
							}
						}
						
						has_government = fascism
					}
				}
				ROOT = {
					remove_ideas = victor_emmanuel
					set_cosmetic_tag = ITA_RSI
					set_party_name = { 
						ideology = fascism 
						long_name = "Partito Fascista Repubblicano"
						name = "PFR"
					}						
				}					
			}
			if = {
				limit = {
					ROOT = {
						tag = HUN
					}
					FROM = {
						original_tag = GER
						has_government = fascism
					}
				}
				ROOT = {
					create_country_leader = {
						name = "Ferenc Szalasi"
						desc = "POLITICS_FERENC_SZALASI_DESC"
						picture = "gfx/leaders/HUN/r56_portrait_HUN_Ferenc_Szalasi.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							anti_communist
							fascist_militia_leader
						}
					}
					set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }					
				}						
			}						
			if = {
				limit = {
					tag = KOR
					is_puppet_of = JAP
					NOT = {
						has_government = communism
					}
					NOT = {
						has_global_flag = japanse_korean_generals
					}										
				}
				KOR = {
					create_corps_commander = {
						name = "Kim Suk-won"
						portrait_path = "gfx/leaders/JAP/Portrait_Japan_Generic_land_4.dds"
						traits = {  }
						skill = 2
						attack_skill = 2
						defense_skill = 1
						planning_skill = 3
						logistics_skill = 1
					}					
					create_field_marshal = { #Relevant mostly if Korea is fascist or Joseon lead, or Japan crumbles
						name = "Hong Sa-ik"
						portrait_path = "gfx/leaders/KOR/r56_portrait_KOR_Hong_Sa-ik.dds"
						traits = { trait_reckless offensive_doctrine }
						skill = 3
						attack_skill = 3
						defense_skill = 2
						planning_skill = 2
						logistics_skill = 3
					}
				}
				set_global_flag = japanse_korean_generals		
			}


			if = {
                limit = {
                    original_tag = SOV
					has_government = neutrality              
                    FROM = {
						OR = {
							original_tag = FRA
							original_tag = AUS
							original_tag = HUN
							original_tag = PER
							original_tag = BEL
							AND = {
								original_tag = SPR
								NOT = {
									has_country_leader = {
										name = "Anarchist Commune"
										ruling_only = yes
									}
								}
							}
							original_tag = JAP
							original_tag = ROM
							original_tag = BUL
							original_tag = GER
							original_tag = PRE
							original_tag = BAY
							original_tag = WUR
							original_tag = MEK
							original_tag = SHL
							original_tag = SAX
							original_tag = HAN
							original_tag = DEN
							original_tag = SWE
							original_tag = NOR
							original_tag = CAN
							original_tag = JOR
							original_tag = IRQ
							original_tag = GRE
							original_tag = YUG	
							original_tag = HOL
							original_tag = MAN
							original_tag = ARM
							original_tag = EGY
							original_tag = SAU
							original_tag = ITA

							AND = {
								original_tag = POR
								has_country_leader = {
									name = "Dom Duarte Nuno"
									ruling_only = yes
								}								
							}
							AND = {
								original_tag = BRA
								has_country_leader = {
									name = "Pedro III"
									ruling_only = yes
								}								
							}
							AND = {
								original_tag = USA
								has_country_leader = {
									name = "Wallis I"
									ruling_only = yes
								}								
							}
							AND = {
								original_tag = HON
								has_country_leader = {
									name = "Juan III"
									ruling_only = yes
								}								
							}																					
							
						}
					}
					has_government = neutrality
                }
				set_party_name = {
					ideology = neutrality
					long_name = r56_SOV_neu_long
					name = r56_SOV_neu_short
				}
			 	create_country_leader = {
					name = "Kirill Vladimirovich"
					desc = "POLITICS_KIRIL_VLADIMIROVICH_DESC"
					picture = "r56_portrait_SOV_Kirill_Vladimirovich_Romanov.dds"
					expire = "1965.1.1"
					ideology = absolute_monarchism
					traits = {
					}
				}
			}

			if = {
				limit = {
					AND = {
						TAG = POL
						SOV = { has_country_flag = SOV_purge_started }
						NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
						NOT = { has_completed_focus = POL_Seek_Autonomy }
						NOT = { has_country_flag = PPS_Revolutionary_Path }
					}
				}
				create_country_leader = {
					name = "Tymczasowy Rząd Jedności Narodowej"
					desc = "PROVISIONAL_GOVERNMENT_OF_NATIONAL_UNITY_DESC"
					picture = "r56_portrait_POL_Provisional_Government_of_National_Unity.dds"
					expire = "1965.1.1"
					ideology = stalinism
					traits = {
					}
				}
			}
			if = {
				limit = {
					AND = {
						TAG = POL
						is_puppet_of = SOV
						has_government = communism
						NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
						NOT = { has_completed_focus = POL_Seek_Autonomy }
					}
				}
				POL = { set_party_name = { ideology = communism long_name = POL_ZPP_party_long name = POL_ZPP_party } }
				drop_cosmetic_tag = yes
				create_country_leader = {
					name = "Tymczasowy Rząd Jedności Narodowej"
					desc = "PROVISIONAL_GOVERNMENT_OF_NATIONAL_UNITY_DESC"
					picture = "r56_portrait_POL_Provisional_Government_of_National_Unity.dds"
					expire = "1965.1.1"
					ideology = stalinism
					traits = {
					}
				}
				if = {
					limit = {
						NOT = { has_unit_leader = 3179 }
						SOV = { NOT = { has_country_flag = purge_1_group_b } }
					}
					create_field_marshal = {
						name = "Konstanty Rokossowski"
						picture = "r56_portrait_POL_Konstanty_Rokossowski.dds"
						traits = { politically_connected panzer_leader panzer_expert offensive_doctrine thorough_planner aggressive_assaulter }
						id = 3179
						skill = 5
						attack_skill = 5
						defense_skill = 2
						planning_skill = 5
						logistics_skill = 4
					}
				}
				if = {
					limit = { NOT = { has_unit_leader = 3156 } }
					create_field_marshal = {
						name = "Michał Rola-Żymierski"
						picture = "r56_portrait_POL_Michal_Rola_Zymierski.dds"
						traits = { politically_connected career_officer logistics_wizard aggressive_assaulter }
						id = 3156
						skill = 3
						attack_skill = 3
						defense_skill = 2
						planning_skill = 3
						logistics_skill = 2
					}
				}
				if = {
					limit = { NOT = { has_unit_leader = 3157 } }
					create_field_marshal = {
						name = "Zygmunt Berling"
						picture = "r56_portrait_POL_Zygmunt_Berling.dds"
						traits = { politically_connected career_officer infantry_officer inspirational_leader }
						id = 3157
						skill = 1
						attack_skill = 2
						defense_skill = 1
						planning_skill = 1
						logistics_skill = 1
					}
				}
				if = {
					limit = { NOT = { has_unit_leader = 3177 } }
					create_corps_commander = {
						name = "Stanisław Popławski"
						picture = "r56_portriat_POL_Stanislav_Poplavsky.dds"
						traits = { trait_reckless harsh_leader skilled_staffer }
						id = 3177
						skill = 3
						attack_skill = 4
						defense_skill = 2
						planning_skill = 2
						logistics_skill = 2
					}
				}
				if = {
					limit = { NOT = { has_unit_leader = 3178 } }
					create_corps_commander = {
						name = "Karol Świerczewski"
						picture = "r56_portrait_POL_Karol_Swierczewski.dds"
						traits = { substance_abuser harsh_leader }
						id = 3178
						skill = 1
						attack_skill = 1
						defense_skill = 1
						planning_skill = 1
						logistics_skill = 1
					}
				}
				if = { limit = { has_unit_leader = 3129 }
					remove_unit_leader = 3129 }
				if = { limit = { has_unit_leader = 3155 }
					remove_unit_leader = 3155 }
				if = { limit = { has_unit_leader = 3154 }
					remove_unit_leader = 3154 }
				if = { limit = { has_unit_leader = 3131 }
					remove_unit_leader = 3131 }
				if = { limit = { has_unit_leader = 3132 }
					remove_unit_leader = 3132 }
				if = { limit = { has_unit_leader = 3134 }
					remove_unit_leader = 3134 }
				if = { limit = { has_unit_leader = 3133 }
					remove_unit_leader = 3133 }
				if = { limit = { has_unit_leader = 3135 }
					remove_unit_leader = 3135 }
				if = { limit = { has_unit_leader = 3136 }
					remove_unit_leader = 3136 }
				if = { limit = { has_unit_leader = 3151 }
					remove_unit_leader = 3151 }
				if = { limit = { has_unit_leader = 3152 }
					remove_unit_leader = 3152 }
				if = { limit = { has_unit_leader = 3153 }
					remove_unit_leader = 3153 }
				if = { limit = { has_unit_leader = 3128 }
					remove_unit_leader = 3128 }
				if = { limit = { has_unit_leader = 3130 }
					remove_unit_leader = 3130 }
			}
			if = {
				limit = { 
					AND = { 
						TAG = POL
						is_puppet_of = GER
					}
				}
				POL = { set_cosmetic_tag = POLG }
				POL = { set_party_name = { ideology = fascism long_name = GER_fascism_party_long name = GER_fascism_party } }
				create_country_leader = {
					name = "Hans Frank"
					desc = "HANS_FRANK_DESC"
					picture = "r56_portrait_POL_Hans_Frank.dds"
					expire = "1965.1.1"
					ideology = nazism
					traits = {
						prince_of_terror
						governor_general
						r56_trait_opposed_to_communism
					}
				}
				POL = { set_party_name = { ideology = neutrality long_name = POL_monarchy_party_long name = POL_monarchy_party } }
				create_country_leader = {
					name = "Fryderyk Krystian Wettyn"
					desc = "FRYDERYK_KRYSTIAN_WETTYN_DESC"
					picture = "r56_portrait_POL_Fryderyk_Krystian_Wettyn.dds"
					expire = "1965.1.1"
					ideology = despotism
					traits = {
						POL_king_of_poland
						POL_german_origins
						r56_trait_opposed_to_communism
					}
				}
			}
			
			if = {
				limit = {
					ROOT = {
						tag = ZIM
					}
					FROM = {
						NOT = {
							tag = ENG
						}
					}
				}
				ZIM = {
					drop_cosmetic_tag = yes #british colony flag
				}
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = CRO
							tag = MTN
							tag = SER
							tag = SLV
							tag = BOS
						}
						
					}
				}
				inherit_technology = YUG
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = VNZ
							tag = NAP
							tag = SAD
							tag = SIC
						}
						
					}
				}
				inherit_technology = ITA
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = BRI
							tag = OCC
							tag = COR
						}
						
					}
				}
				inherit_technology = FRA
			}			
			

			if = { 
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_COUNTRIES
					}
				}
				create_intelligence_agency = yes																									
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = ONE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_1
				}				
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = TWO_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_2
				}				
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = THREE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_3
				}				
			}			
		}
	}
	
###---> On Release As Puppet <><> <><> <><>
	on_release_as_free = {
		effect = {
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = CRO
							tag = MTN
							tag = SER
							tag = SLV
							tag = BOS
						}
						
					}
				}
				inherit_technology = YUG
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = VNZ
							tag = NAP
							tag = SAD
							tag = SIC
						}
						
					}
				}
				inherit_technology = ITA
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = BRI
							tag = OCC
							tag = COR
						}
						
					}
				}
				inherit_technology = FRA
			}			
									
			if = {
				limit = {
					ROOT = {
						tag = ZIM
					}
				}
				ZIM = {
					drop_cosmetic_tag = yes #british colony flag
				}
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_COUNTRIES
					}
				}
				create_intelligence_agency = yes																									
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_MAJORS_AND_STRONG_MINORS
					}
					OR = {
						capital_scope = {
							OR = {
								is_on_continent = north_america
								is_on_continent = europe
							}
						}
						num_of_controlled_states > 2
						original_tag = WLL
						original_tag = VLA
						original_tag = CAT
						original_tag = CRO
						original_tag = SCO
						original_tag = WLS
						original_tag = NIR
						original_tag = ISR
																		
					}

				}
				create_intelligence_agency = yes																									
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = ONE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_1
				}				
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = TWO_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_2
				}				
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = THREE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_3
				}				
			}						
		}
	}
	
###---> On Startup <><> <><> <><>
	on_startup = {
	
		effect = {
			#Insane AI Option 
			if = {
				limit = {
					has_game_rule = {
						rule = rt56_ai_behavior
						option = OLD_SCHOOL
					}
				}
				set_global_flag = rt56_old_school
			}
								
			# Add the Darien Gap
			304 = {
				add_province_modifier = {
					static_modifiers = { darien_gap }
					province = {
						id = 10482
					}
				}
			}
			#Anglo Persian oil concessions (limited for Khuzestan for now for balance reason)
			PER = {
				give_resource_rights = { receiver = ENG state = 413 }
			}
			#Soviet-Japanese agreement over North Sakhalin oil (lasted roughtly until lake Kassan)
			SOV = {
				give_resource_rights = { receiver = JAP state = 655 }
			}						
			#Italian control over Albanian underground
			ALB = {
				give_resource_rights = { receiver = ITA state = 797 }
				give_resource_rights = { receiver = ITA state = 44 }
			}
			FRI = {
				#tried to idea...
				set_division_template_lock = {
					division_template = "1st Brigade Coloniale"
					is_locked = yes
				}
				set_division_template_lock = {
					division_template = "1st Régiment de Tirailleurs Indochinois"
					is_locked = yes
				}
			}
			85 = {
				add_building_construction = {
					type = naval_base
					province = 9263
					level = 1
					instant_build = yes
				}
			}
			POL = {
				#if = {
				#	limit = { has_dlc = "Death or Dishonor" }
					create_production_license = {
						target = ROM 
						equipment = {
							type = fighter_equipment_0	
						}
						cost_factor = 0
					}
				#}
			}
			FRA = {
				add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 10000 producer = FRA }
			}
			ITA = {
				#if = {
				#	limit = { has_dlc = "Death or Dishonor" }
					create_production_license = {
						target = POL 
						equipment = {
							type = motorized_equipment_1	
						}
						cost_factor = 0
					}
				#}
			}
			POL = { country_event = poland.69 }
			
			###Give Sweden anti-tank tech
			SWE = {
				#set_technology = {
				#	interwar_antitank = 1
				#}
				#if = {
				#	limit = { has_dlc = "Death or Dishonor" }
					create_production_license = {
						target = POL 
						equipment = {
							type = anti_tank_equipment_1	
						}
						cost_factor = 0
					}
				#}
			}
			AUS = {
				add_equipment_to_stockpile = {
					type = light_tank_equipment_1
					amount = 35
					producer = ITA
				}
			}			
			HUN = {
				add_equipment_to_stockpile = {
					type = light_tank_equipment_1
					amount = 30
					producer = ITA
				}
			}
			BUL = {
				add_equipment_to_stockpile = {
					type = light_tank_equipment_1
					amount = 14
					producer = ITA
				}
			}
			
			if = { 
				limit = {
					has_game_rule = {
						rule = allow_r56_techs
						option = no
					}
				}
				set_global_flag = disable_r56_techs					
			}

			BEL = {
				if = { 
					limit = {
						has_game_rule = {
							rule = BEL_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						15 = { set_country_flag = BEL_AI_RANDOM_DEMOCRATIC_HISTORICAL }
						10 = { set_country_flag = BEL_AI_RANDOM_DEMOCRATIC_ALTERNATE }
						10 = { set_country_flag = BEL_AI_RANDOM_DEMOCRATIC_BEL_ALLY_BRITAIN }
						10 = { set_country_flag = BEL_AI_RANDOM_DEMOCRATIC_BEL_BENELUX }
						10 = { set_country_flag = BEL_AI_RANDOM_COMMUNISM }
						10 = { set_country_flag = BEL_AI_RANDOM_COMMUNISM_BEL_INDEPENDENT }
						10 = { set_country_flag = AI_RANDOM_FASCISM_BEL_VERDINASO }
						10 = { set_country_flag = AI_RANDOM_BEL_FASCISM_REX }
					}					
				}
			}
			AST = {
				if = { 
					limit = {
						has_game_rule = {
							rule = AST_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						20 = { set_country_flag = AST_AI_RANDOM_COMMUNIST }
						25 = { set_country_flag = AST_AI_RANDOM_DEMOCRATIC_ALTERNATE }
						25 = { set_country_flag = AST_AI_RANDOM_DEMOCRATIC_HISTORICAL }
						10 = { set_country_flag = AST_AI_RANDOM_FASCIST }
						20 = { set_country_flag = AST_AI_RANDOM_FASCIST_AF }
					}
				}
			}

			CHL = {
				if = { 
					limit = {
						has_game_rule = {
							rule = CHL_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						30 = { set_country_flag = CHL_AI_RANDOM_DEMOCRATIC_HISTORICAL }
						25 = { set_country_flag = CHL_AI_RANDOM_NEUTRALITY_LIBERAL_PARTY }
						23 = { set_country_flag = CHL_AI_RANDOM_FASCISM_PARTY }
						22 = { set_country_flag = CHL_AI_RANDOM_COMMUNIST_PARTY }
					}					
				}
			}
			FRA = {
				if = { 
					limit = {
						has_game_rule = {
							rule = FRA_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						20 = { set_country_flag = FRA_AI_RANDOM_DEMOCRATIC_HISTORICAL }
						10 = { set_country_flag = FRA_AI_RANDOM_DEMOCRATIC_LITTLE_ENTENTE }
						10 = { set_country_flag = FRA_AI_RANDOM_COMMUNIST_HUMANITE_UNIE }
						10 = { set_country_flag = FRA_AI_RANDOM_COMMUNIST_COMINTERN }
						10 = { set_country_flag = FRA_AI_RANDOM_FASCIST_FRONT_LIBERTE }
						10 = { set_country_flag = FRA_AI_RANDOM_FASCIST_LA_CAGOULE_COUP }
						10 = { set_country_flag = FRA_AI_RANDOM_MONARCHIST_ORLEANISTS }
						10 = { set_country_flag = FRA_AI_RANDOM_MONARCHIST_BONAPARTISTS }
					}					
				}
			}			
			if = {
				limit = {
					has_game_rule = {
						rule = ideology_join_faction
						option = SAME_IDEOLOGY
					}
				}			
				every_country = {
					add_ideas = generic_can_only_join_factions_same_ideology
				}
			}			
#			if = {
#				limit = {
#					has_game_rule = {
#						rule = ideology_join_faction
#						option = SAME_IDEOLOGY_EXCEPT_NON_ALIGNED
#					}
#				}			
#				every_country = {
#					if = {
#						limit = {
#							NOT = {
#								has_government = neutrality
#							}
#						}
#						add_ideas = generic_can_only_join_factions_same_ideology
#					}	
#				}
#			}
			if = {
				limit = {
					has_game_rule = {
						rule = ideology_join_faction
						option = EVENTS_ONLY
					}
				}			
				every_country = {
					set_rule = {
						can_join_factions = no
					}					
				}
			}
			
			#Ukraine
			if = {
				limit = {
					NOT = {
						OR = {
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_FRAGMENTED
							}
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_DECENTRALIZED
							}
						}
					}
				}			
				UKR = {
					remove_state_core = 93
					remove_state_core = 91
					remove_state_core = 89
					
					
					add_state_claim = 93
					add_state_claim = 91
					add_state_claim = 89
				}
			}
			
			WHY = {
				set_variable = { global.r56_var_multiplayer = 0 }
			}
			
			AUS = {
				set_country_flag = GP_AUS_ENABLED
			}
			
			GXC = {
				set_country_flag = KMT_lzr_tt
			}
			
			every_country = {
				limit = {
					is_independent_warlords = yes
				}
				add_country_leader_trait = warlords
			}
			
			every_country = {
				country_event = { id = r56.startup.event.01 }
			}
			# Game Rules - Fragmentation
			if = {
				limit = {
					has_game_rule = {
						rule = BEL_fragmentation_status
						option = BEL_FRAGMENTED
					}
				}
				BEL = {
					every_unit_leader = {
						limit = { has_trait = flemish }
						set_nationality = VLA
					}
					every_unit_leader = {
						limit = { has_trait = walloon }
						set_nationality = WLL
					}	
					transfer_units_fraction = {
						target = VLA
						size = 0.5
					}
					transfer_units_fraction = {
						target = WLL
						size = 0.5
					}									
				}								
				FAK = {
					annex_country = {
					    target = BEL
					    transfer_troops = no
					}
					release = VLA
					release = WLL	
				}
				6 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0" 
						owner = VLA
					}
					create_unit = {
						division = "name = \"2. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0" 
						owner = VLA
					}
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = arms_factory
						level = 1
						instant_build = yes
					}
																																																										
				}
				34 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0" 
						owner = WLL
					}
					create_unit = {
						division = "name = \"2. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0" 
						owner = WLL
					}																																																
				}				
				if = {
					limit = {
						NOT = {
							has_game_rule = {
								rule = africa_colonization_status
								option = AFRICA_DECOLONIZED
							}
						}
					}				
					VLA = {
						puppet = COG
					}
					COG = {
						set_politics = {							
							ruling_party = neutrality
							last_election = "1936.1.1"
							election_frequency = 48
							elections_allowed = no
						}
						set_popularities = {
							democratic = 10
							fascism = 5
							communism = 2
							neutrality = 83
						}

						create_country_leader = {
							name = "Pierre Ryckmans"
							desc = "Pierre Ryckmans, Governor General of the Belgian Congo"
							picture = "gfx/leaders/COG/Pierre_Ryckmans.dds"
							expire = "1965.1.1"
							ideology = despotism
							traits = {
							}
						}
					}
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = BEL_fragmentation_status
						option = BEL_FRAGMENTED_GREATER_FLANDERS
					}
				}
				BEL = {
					every_unit_leader = {
						limit = { has_trait = flemish }
						set_nationality = VLA
					}
					every_unit_leader = {
						limit = { has_trait = walloon }
						set_nationality = WLL
					}				
				}								
				FAK = {
					annex_country = {
					    target = BEL
					    transfer_troops = no
					}
					release = VLA
					release = WLL	
				}
				VLA = {
					transfer_state = 29
					change_tag_from = BEL
				}
				29 = {
					add_core_of = VLA
				}
				set_province_name = { id = 575 name = "Duinkerke"}
				set_province_name = { id = 11483 name = "Rijsel"}
				set_province_name = { id = 11548 name = "Kales"}
				6 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5" 
						owner = VLA
					}
					create_unit = {
						division = "name = \"2. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5" 
						owner = VLA
					}
					create_unit = {
						division = "name = \"3. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5" 
						owner = VLA
					}
					create_unit = {
						division = "name = \"4. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5" 
						owner = VLA
					}
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = arms_factory
						level = 1
						instant_build = yes
					}																																																															
				}
				34 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5" 
						owner = WLL
					}
					create_unit = {
						division = "name = \"2. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5" 
						owner = WLL
					}																																																
				}				
				set_global_flag = BEL_french_cities_renamed_flemish				
				if = {
					limit = {
						NOT = {
							has_game_rule = {
								rule = africa_colonization_status
								option = AFRICA_DECOLONIZED
							}
						}
					}				
					VLA = {
						puppet = COG
					}
					COG = {
						set_politics = {							
							ruling_party = neutrality
							last_election = "1936.1.1"
							election_frequency = 48
							elections_allowed = no
						}
						set_popularities = {
							democratic = 10
							fascism = 5
							communism = 2
							neutrality = 83
						}

						create_country_leader = {
							name = "Pierre Ryckmans"
							desc = "Pierre Ryckmans, Governor General of the Belgian Congo"
							picture = "gfx/leaders/COG/Pierre_Ryckmans.dds"
							expire = "1965.1.1"
							ideology = despotism
							traits = {
							}
						}
					}
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_DECENTRALIZED
					}
				}
				GER = {
					release_puppet = BAY
				}
				52 = {	add_core_of = GER }
				53 = {	add_core_of = GER }
				54 = {	add_core_of = GER }					
				BAY = {
					hidden_effect = {
						load_oob = "BAY_1936"
					}
				}				
			}
			if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_FRAGMENTED
					}
				}
				GER = {
					release = BAY
				}
				52 = {	add_core_of = GER }
				53 = {	add_core_of = GER }
				54 = {	add_core_of = GER }					
				BAY = {
					hidden_effect = {
						load_oob = "BAY_1936"
					}
				}
			}						
			if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_EAST_VS_WEST
					}
				}
				set_global_flag = game_rule_flag_germany_fragmented
				WGR = {
					add_state_core = 42
					add_state_core = 50
					add_state_core = 51
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					add_state_core = 55
					add_state_core = 56
					add_state_core = 57
					add_state_core = 58
					add_state_core = 59
					add_state_core = 807
					add_state_core = 808
					add_state_core = 809
					change_tag_from = GER
					
															
				}
				DDR = {
					add_state_core = 5
					add_state_core = 60
					add_state_core = 61
					add_state_core = 62
					add_state_core = 63
					add_state_core = 64
					add_state_core = 65
					add_state_core = 66
					add_state_core = 67						
					add_state_core = 68
					add_state_core = 763
				}
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}				
				}					
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}
					
					release = WGR
					release = DDR
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS
					##give them cores over the other side.
					DDR = {
						add_state_core = 42
						add_state_core = 50
						add_state_core = 51
						add_state_core = 52
						add_state_core = 53
						add_state_core = 54
						add_state_core = 55
						add_state_core = 56
						add_state_core = 57
						add_state_core = 58
						add_state_core = 59
						add_state_core = 807
						add_state_core = 808
						add_state_core = 809
						load_oob = "DDR_1936"
					}
					WGR = {
						add_state_core = 5
						add_state_core = 60
						add_state_core = 61
						add_state_core = 62
						add_state_core = 63
						add_state_core = 64
						add_state_core = 65
						add_state_core = 66
						add_state_core = 67						
						add_state_core = 68
						add_state_core = 763
						load_oob = "WGR_1936"
					}													
				}												
			}
			if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_EAST_VS_WEST_COM
					}
				}
				set_global_flag = game_rule_flag_germany_fragmented
				WGR = {
					add_state_core = 42
					add_state_core = 50
					add_state_core = 51
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					add_state_core = 55
					add_state_core = 56
					add_state_core = 57
					add_state_core = 58
					add_state_core = 59
					add_state_core = 807
					add_state_core = 808
					add_state_core = 809
					change_tag_from = WGR
				}
				DDR = {
					add_state_core = 5
					add_state_core = 60
					add_state_core = 61
					add_state_core = 62
					add_state_core = 63
					add_state_core = 64
					add_state_core = 65
					add_state_core = 66
					add_state_core = 67						
					add_state_core = 68
					add_state_core = 763
				}
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}				
				}					
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}
					
					release = WGR
					WGR = {
						load_oob = "WGR_1936"
					}					
					release = DDR
					DDR = {
						load_oob = "DDR_1936"
					}
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS											
					##give them cores over the other side.
					DDR = {
						add_state_core = 42
						add_state_core = 50
						add_state_core = 51
						add_state_core = 52
						add_state_core = 53
						add_state_core = 54
						add_state_core = 55
						add_state_core = 56
						add_state_core = 57
						add_state_core = 58
						add_state_core = 59
						add_state_core = 807
						add_state_core = 808
						add_state_core = 809
						change_tag_from = GER
					}
					WGR = {
						add_state_core = 5
						add_state_core = 60
						add_state_core = 61
						add_state_core = 62
						add_state_core = 63
						add_state_core = 64
						add_state_core = 65
						add_state_core = 66
						add_state_core = 67						
						add_state_core = 68
						add_state_core = 763
					}													
				}												
			}
			if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_EAST_VS_WEST_VS_BAVARIA
					}
				}
				set_global_flag = game_rule_flag_germany_fragmented
				change_tag_from = GER				
				WGR = {
					add_state_core = 42
					add_state_core = 50
					add_state_core = 51
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					add_state_core = 55
					add_state_core = 56
					add_state_core = 57
					add_state_core = 58
					add_state_core = 59
					add_state_core = 807
					add_state_core = 808
					add_state_core = 809
					
				}
				DDR = {
					add_state_core = 5
					add_state_core = 60
					add_state_core = 61
					add_state_core = 62
					add_state_core = 63
					add_state_core = 64
					add_state_core = 65
					add_state_core = 66
					add_state_core = 67						
					add_state_core = 68
					add_state_core = 763
				}
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}				
				}					
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}
					release = BAY
					BAY = {
						change_tag_from = GER
						
					}
					release = WGR
					WGR = {
						load_oob = "WGR_1936"
					}					
					release = DDR
					DDR = {
						load_oob = "DDR_1936"
					}
					BAY = {
						load_oob = "BAY_1936"
					}
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS										
					##give them cores over the other side.
					DDR = {
						add_state_core = 42
						add_state_core = 50
						add_state_core = 51
						add_state_core = 52
						add_state_core = 53
						add_state_core = 54
						add_state_core = 55
						add_state_core = 56
						add_state_core = 57
						add_state_core = 58
						add_state_core = 59
						add_state_core = 807
						add_state_core = 808
						add_state_core = 809
					}
					WGR = {
						add_state_core = 5
						add_state_core = 52
						add_state_core = 53
						add_state_core = 54						
						add_state_core = 60
						add_state_core = 61
						add_state_core = 62
						add_state_core = 63
						add_state_core = 64
						add_state_core = 65
						add_state_core = 66
						add_state_core = 67						
						add_state_core = 68
						add_state_core = 763
					}
					if = {
						limit = {
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_COMMONWEALTH
							}
						}
						LIT = { transfer_state = 188 }
					}													
				}												
			}
			if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_GERMAN_KINGDOMS
					}
				}
				set_global_flag = game_rule_flag_germany_fragmented
				WUR = {
					add_state_core = 50
					transfer_state = 50
					
					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					50 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = WUR
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = WUR
						}																																																
					}					
				}
				SAX = {
					add_state_core = 65
					transfer_state = 65

					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					65 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = SAX
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = SAX
						}																																																
					}					

				}
				MEK = {
					add_state_core = 61
					transfer_state = 61

					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					61 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = MEK
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = MEK
						}																																																
					}					

				}
				SHL = {
					add_state_core = 58					
					transfer_state = 58

					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					58 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = SHL
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = SHL
						}																																																
					}					
				}
				BAY = {
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					#load_oob = "BAY_1936"

					transfer_state = 52
					transfer_state = 53
					transfer_state = 54
				}	
				HAN = {
					add_state_core = 59
					add_state_core = 56
					add_state_core = 57

					transfer_state = 59
					transfer_state = 56
					transfer_state = 57

					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}


					56 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = HAN
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = HAN
						}
						create_unit = {
							division = "name = \"3. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = HAN
						}	
						create_unit = {
							division = "name = \"4. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = HAN
						}																																																											
					}					
					
				}																					
				PRE = {

					add_state_core = 42
					add_state_core = 51
					add_state_core = 55
					add_state_core = 60
					add_state_core = 64
					add_state_core = 62
					add_state_core = 68
					add_state_core = 63
					add_state_core = 66
					add_state_core = 67
					add_state_core = 5
					add_state_core = 763
					add_state_core = 807
					add_state_core = 808

					transfer_state = 42
					transfer_state = 51
					transfer_state = 55
					transfer_state = 60
					transfer_state = 64
					transfer_state = 62
					transfer_state = 68
					transfer_state = 63
					transfer_state = 66
					transfer_state = 67
					transfer_state = 5
					transfer_state = 763
					transfer_state = 807
					transfer_state = 808

					change_tag_from = GER										
				}
				GER = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 1
								has_id = 2
								has_id = 3
								has_id = 5
								has_id = 6
								#Kleist, Hesse
								has_id = 8
								has_id = 9
								has_id = 10
								has_id = 15
								has_id = 16
								has_id = 17
								has_id = 18
								has_id = 19
								has_id = 20
								has_id = 21
								#Georg von Küchler, Hesse
								has_id = 22
								has_id = 25
								has_id = 33
								has_id = 35
								has_id = 26
								has_id = 28
								has_id = 29
								has_id = 31
							}
						}
						set_nationality = PRE
					}
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 34 
							}
						}
						set_nationality = HAN
					}
					every_unit_leader = {
						limit = {
							OR = {
								
								has_id = 27 
							}
						}
						set_nationality = SHL
					}										
					every_unit_leader = {
						limit = {
							OR = {
								#Rommel
								has_id = 4 
								has_id = 7
								has_id = 11
							}
						}
						set_nationality = WUR
					}
					every_unit_leader = {
						limit = {
							OR = {
								
								has_id = 13
								has_id = 23
								has_id = 24
								has_id = 32
								has_id = 30
							}
						}
						set_nationality = BAY
					}
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 14
							}
						}
						set_nationality = SAX
					}																			
				}							
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}				
				}					
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}
					BAY = {
						load_oob = "BAY_1936"
					}
					PRE = {
						load_oob = "PRE_1936"
					}					
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS										
					##give them cores over the other side.
					if = {
						limit = {
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_COMMONWEALTH
							}
						}
						LIT = { transfer_state = 188 }
					}													
				}												
			}
			if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_GERMAN_KINGDOMS2
					}
				}
				set_global_flag = game_rule_flag_germany_fragmented
				WUR = {
					add_state_core = 50
					transfer_state = 50
					add_state_core = 809
					transfer_state = 809
					
					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					50 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = WUR
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = WUR
						}																																																
					}					
				}
				SAX = {
					add_state_core = 65
					transfer_state = 65

					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					65 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = SAX
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = SAX
						}																																																
					}					

				}
				MEK = {
					add_state_core = 61
					transfer_state = 61

					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					61 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = MEK
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = MEK
						}																																																
					}					

				}
				SHL = {
					add_state_core = 58
					transfer_state = 58

					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					58 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = SHL
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = SHL
						}																																																
					}					
				}
				BAY = {
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					transfer_state = 52
					transfer_state = 53
					transfer_state = 54

				}	
				HAN = {
					add_state_core = 59
					add_state_core = 56
					add_state_core = 57
					transfer_state = 59
					transfer_state = 56
					transfer_state = 57

					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					56 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = HAN
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = HAN
						}
						create_unit = {
							division = "name = \"3. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = HAN
						}	
						create_unit = {
							division = "name = \"4. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0" 
							owner = HAN
						}																																																											
					}					

				}																					
				PRE = {
					add_state_core = 42
					add_state_core = 51
					add_state_core = 55
					add_state_core = 60
					add_state_core = 64
					add_state_core = 62
					add_state_core = 68
					add_state_core = 63
					add_state_core = 66
					add_state_core = 67
					add_state_core = 5
					add_state_core = 763
					add_state_core = 807
					add_state_core = 808
					transfer_state = 42
					transfer_state = 51
					transfer_state = 55
					transfer_state = 60
					transfer_state = 64
					transfer_state = 62
					transfer_state = 68
					transfer_state = 63
					transfer_state = 66
					transfer_state = 67
					transfer_state = 5
					transfer_state = 763
					transfer_state = 807
					transfer_state = 808

					division_template = {
						name = "Infanterie-Division"
					
						division_names_group = GER_Inf_01
					
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}
						
						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"
					
						division_names_group = GER_Arm_01
					
						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists
					
						division_names_group = GER_MOT_02
					
						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }
							
							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }
							
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01
					
						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"
					
						division_names_group = GER_Cav_01
					
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					create_faction = "Potsdam's Pact"	
					change_tag_from = GER
				}
				GER = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 1
								has_id = 2
								has_id = 3
								has_id = 5
								has_id = 6
								#Kleist, Hesse
								has_id = 8
								has_id = 9
								has_id = 10
								has_id = 15
								has_id = 16
								has_id = 17
								has_id = 18
								has_id = 19
								has_id = 20
								has_id = 21
								#Georg von Küchler, Hesse
								has_id = 22
								has_id = 25
								has_id = 33
								has_id = 35
								has_id = 26
								has_id = 28
								has_id = 29
								has_id = 31
							}
						}
						set_nationality = PRE
					}
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 34 
							}
						}
						set_nationality = HAN
					}
					every_unit_leader = {
						limit = {
							OR = {
								
								has_id = 27 
							}
						}
						set_nationality = SHL
					}										
					every_unit_leader = {
						limit = {
							OR = {
								#Rommel
								has_id = 4 
								has_id = 7
								has_id = 11
							}
						}
						set_nationality = WUR
					}
					every_unit_leader = {
						limit = {
							OR = {
								
								has_id = 13
								has_id = 23
								has_id = 24
								has_id = 32
								has_id = 30
							}
						}
						set_nationality = BAY
					}
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 14
							}
						}
						set_nationality = SAX
					}																			
				}							
				PRE = {
					add_to_faction = BAY
					add_to_faction = MEK
					add_to_faction = SAX
					add_to_faction = HAN
					add_to_faction = SHL
					add_to_faction = WUR					
					
				}				
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}				
				}					
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}
					BAY = {
						load_oob = "BAY_1936"
					}
					PRE = {
						load_oob = "PRE_1936"
					}					
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS										
					##give them cores over the other side.
					if = {
						limit = {
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_COMMONWEALTH
							}
						}
						LIT = { transfer_state = 188 }
					}													
				}												
			}
			if = {
				limit = {
					has_game_rule = {
						rule = fra_fragmentation_status
						option = FRA_DECENTRALIZED
					}
				}
				FRA = {
					release_puppet = BRI
					release_puppet = COR
					release_puppet = OCC
				}
				1 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0" 
						owner = COR
					}																																										
				}					
				OCC = {
					load_oob = "OCC_1936"					
				}				
			}
			if = {
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_FRAGMENTED
					}
				}
				ITA = {
					release = SAD
					release = SIC
					release = NAP
					release = VNZ
					transfer_units_fraction = {
						target = NAP
						size = 0.25
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.15
					}					
					transfer_units_fraction = {
						target = SIC
						size = 0.05
					}
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}					
				}									
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }
				ITA = { add_state_claim = 163 }
				160 = { add_core_of = ITA }	
				736 = { add_core_of = VNZ }	
				163 = { add_core_of = VNZ }	
				VNZ = {
					transfer_state = 736
					transfer_state = 163
					transfer_state = 164
					add_state_claim = 103
					add_state_claim = 182
				}
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687						
							}

						}						
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687						
							}

						}						
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}
							
						}
						set_nationality = VNZ
					}					
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe
								
							}
							
						}
						set_nationality = NAP
					}					
				}																											
			}
			if = {
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_FRAGMENTED_SERENISSIMA
					}
				}
				ITA = {
					release = SAD
					release = SIC
					release = NAP
					release = VNZ
					transfer_units_fraction = {
						target = NAP
						size = 0.2
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.2
					}					
					transfer_units_fraction = {
						target = SIC
						size = 0.05
					}
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}					
				}									
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }	
				160 = { add_core_of = ITA }	
				736 = { add_core_of = VNZ }	
				163 = { add_core_of = VNZ }
				ITA = { add_state_claim = 163 }
				GRE = {
					delete_unit = { state = 182 }
				}
				VNZ = {
					transfer_state = 736
					transfer_state = 163
					transfer_state = 164
					transfer_state = 103
					transfer_state = 182
					change_tag_from = ITA
				}
				182 = {
					add_compliance = 70
				}

				164 = {
					add_compliance = 70
				}
				103 = {
					add_compliance = 60
				}
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687						
							}

						}						
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687						
							}

						}						
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}	
						}
						set_nationality = VNZ
					}					
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe
								
							}	
						}
						set_nationality = NAP
					}					
				}											
			}			
			if = {
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_FRAGMENTED_NEAPOLITAN_SICILY
					}
				}
				ITA = {
					release = SAD
					release = NAP
					transfer_units_fraction = {
						target = NAP
						size = 0.3
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.15
					}	
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}					
				}									
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }
				ITA = { add_state_claim = 163 }
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687						
							}

						}						
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680		
								has_id =  687				
							}

						}						
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}
						}
						set_nationality = VNZ
					}					
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe
								
							}
						}
						set_nationality = NAP
					}					
				}				
			}
			if = {
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_FRAGMENTED_SERENISSIMA_TWO_SICILES
					}
				}
				ITA = {
					release = SAD
					release = NAP
					release = VNZ
					transfer_units_fraction = {
						target = NAP
						size = 0.25
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.2
					}					
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}					
				}									
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }	
				160 = { add_core_of = ITA }	
				736 = { add_core_of = VNZ }	
				163 = { add_core_of = VNZ }
				ITA = { add_state_claim = 163 }
				GRE = {
					delete_unit = { state = 182 }
				}
				VNZ = {
					transfer_state = 736
					transfer_state = 163
					transfer_state = 164
					transfer_state = 103
					transfer_state = 182
					change_tag_from = ITA
				}
				182 = {
					add_compliance = 70
				}
				
				164 = {
					add_compliance = 70
				}
				103 = {
					add_compliance = 60
				}
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687						
							}

						}						
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}	
						}
						set_nationality = VNZ
					}					
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe
								
							}	
						}
						set_nationality = NAP
					}					
				}											
			}			
			if = {
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_DECENTRALIZED
					}
				}
				ITA = {
					release_puppet = SAD
					release_puppet = SIC
					release_puppet = NAP
					release_puppet = VNZ
					transfer_units_fraction = {
						target = NAP
						size = 0.25
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.1
					}	
					transfer_units_fraction = {
						target = SIC
						size = 0.05
					}
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}					
				}									
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }	
				160 = { add_core_of = ITA }
				736 = { add_core_of = VNZ }	
				163 = { add_core_of = VNZ }	
				ITA = { add_state_claim = 163 }
				VNZ = {
					transfer_state = 736
					transfer_state = 163
				}
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684	
								has_id =  683	
								has_id =  682
								has_id =  681
								has_id =  680	
								has_id =  687					
							}

						}						
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}
						}
						set_nationality = VNZ
					}					
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe
								
							}
						}
						set_nationality = NAP
					}					
				}								
			}																											
			if = {
				limit = {
					has_game_rule = {
						rule = africa_colonization_status
						option = AFRICA_DECOLONIZED
					}
				}
				FRA = {
					release = MOR
					release = ALG
					release = TUN
					release = DJI
					release = MAD
					release = GAB
					release = RCG
					release = CMR
					release = CAR
					release = CHA
					release = DAH
					release = TOG
					release = IVO
					release = VOL
					release = MLI
					release = GNA
					release = SEN
					release = NGR
					release = MRT
				}
				ITA = {
					release = LBA
					release = ERI
					release = SOM
				}
				SOM = {
					transfer_state = 269
				}
				ENG = {
					release = EGY
					release = SUD
					release = UGA
					release = TZN
					release = ZAM
					release = MLW
					release = KEN
					release = ZIM
					release = BOT
					release = NGA
					release = GHA
					release = SIE
					release = GAM
				}
				BEL = {
					end_puppet = COG
				}
				COG = {
					release = RWA
					release = BRD
					retire_country_leader = yes
					drop_cosmetic_tag = yes
				}		
				SAF = {
					release = NMB
				}
				POR = {
					release = MZB
					release = ANG
					release = GNB
				}
				SPR = {
					release = WES
					release = EQG
				}
				ITA = {
					white_peace = {
						tag = ETH
					}
				}
				MOR = {
					transfer_state = 290
					transfer_state = 783
				}
				ENG = {
					set_autonomy = { target = SAF autonomy_state = autonomy_free }
				}
				ZIM = {
					drop_cosmetic_tag = yes
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = fra_fragmentation_status
						option = FRA_FRAGMENTED
					}
				}
				FRA = {
					release = BRI
					release = COR
					release = OCC
					transfer_units_fraction = {
						target = OCC
						size = 0.4
					}
					transfer_units_fraction = {
						target = BRI
						size = 0.1
					}
					transfer_units_fraction = {
						target = COR
						size = 0.001
					}					
				}
				OCC = {
					load_oob = "OCC_1936"					
				}
				1 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0" 
						owner = COR
					}																																										
				}									
				1 = { add_core_of = FRA }
				14 = { add_core_of = FRA }
				19 = { add_core_of = FRA }
				20 = { add_core_of = FRA }	
				21 = { add_core_of = FRA }	
				22 = { add_core_of = FRA }	
				25 = { add_core_of = FRA }
				26 = { add_core_of = FRA }						
				31 = { add_core_of = FRA }
				32 = { add_core_of = FRA }		
				735 = { add_core_of = FRA }	
			}
			if = {
				limit = {
					has_game_rule = {
						rule = fra_fragmentation_status
						option = FRA_DECENTRALIZED
					}
				}
				FRA = {
					release_puppet = BRI
					release_puppet = COR
					release_puppet = OCC
				}
				1 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0" 
						owner = COR
					}																																										
				}					
				OCC = {
					load_oob = "OCC_1936"					
				}				
			}						
			if = {
				limit = {
					has_game_rule = {
						rule = cze_fragmentation_status
						option = CZE_FRAGMENTED
					}
				}
				CZE = {
					release = SLO
					release = RUT
					set_cosmetic_tag = CZE_ONLY
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = cze_fragmentation_status
						option = CZE_DECENTRALIZED
					}
				}
				CZE = {
					release_puppet = SLO
					release_puppet = RUT
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = den_fragmentation_status
						option = DEN_FRAGMENTED
					}
				}
				DEN = {
					release = GRL
					set_autonomy = { target = GRL autonomy_state = autonomy_free }
					release = ICE
					set_autonomy = { target = ICE autonomy_state = autonomy_free }
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = den_fragmentation_status
						option = DEN_DECENTRALIZED
					}
				}
				DEN = {
					release_puppet = GRL
				}
				GRL = {
					set_cosmetic_tag = GRL2
				}
			}			
			if = {
				limit = {
					has_game_rule = {
						rule = spr_fragmentation_status
						option = SPR_FRAGMENTED
					}
				}
				SPR = {
					release = CAT
					release = NAV
					release = GLC
				}
				NAV = {
					172 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0" 
							owner = NAV
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0" 
							owner = NAV
						}																																										
					}					
				}
				CAT = {
					165 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0" 
							owner = CAT
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0" 
							owner = CAT
						}
						create_unit = {
							division = "name = \"3. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0" 
							owner = CAT
						}																																										
					}					
				}								
				165 = {	add_core_of = SPR }
				171 = {	add_core_of = SPR }
				172 = {	add_core_of = SPR }
				GLC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118								
							}

						}						
						set_nationality = SPR
					}
				}
				NAV = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118								
							}

						}						
						set_nationality = SPR
					}
				}
				CAT = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118								
							}

						}						
						set_nationality = SPR
					}
				}								
			}
			if = {
				limit = {
					has_game_rule = {
						rule = spr_fragmentation_status
						option = SPR_DECENTRALIZED
					}
				}
				SPR = {
					release_puppet = CAT
					release_puppet = GLC
					release_puppet = NAV
				}
				165 = {	add_core_of = SPR }
				171 = {	add_core_of = SPR }
				172 = {	add_core_of = SPR }	
				CAT = {
					load_oob = "CAT_ARAGON_1936"					
				}
				NAV = {
					load_oob = "NAV_1936"
				#	random_owned_controlled_state = {
				#		prioritize = { 172 }
				#		limit = { ROOT = { has_full_control_of_state = PREV } }
				#		create_unit = {
				#			division = "name = \"1. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0" 
				#			owner = NAV
				#		}
				#		create_unit = {
				#			division = "name = \"2. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0" 
				#			owner = NAV
				#		}																																										
				#	}					
				}
				SPR = {
					transfer_units_fraction = {
						target = NAV
						size = 0.05
					}
					transfer_units_fraction = {
						target = CAT
						size = 0.05
					}
					transfer_units_fraction = {
						target = GLC
						size = 0.05
					}										
				}
				GLC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118								
							}

						}						
						set_nationality = SPR
					}
				}
				NAV = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118								
							}

						}						
						set_nationality = SPR
					}
				}
				CAT = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118								
							}

						}						
						set_nationality = SPR
					}
				}																
			}
			if = {
				limit = {
					has_game_rule = {
						rule = spr_fragmentation_status
						option = SPR_15TH_CENTURY_ARAGON
					}
				}
				set_global_flag = XVth_century_aragon_flag			
				SPR = {
					release = CAT
					release = NAV
					release = GLC
					transfer_units_fraction = {
						target = NAV
						size = 0.05
					}
					transfer_units_fraction = {
						target = CAT
						size = 0.15
					}
					transfer_units_fraction = {
						target = GLC
						size = 0.05
					}										
									
				}
				115 = {	add_core_of = CAT }
				114 = {	add_core_of = CAT }
				117 = {	add_core_of = CAT }
				156 = {	add_core_of = CAT }
				166 = {	add_core_of = CAT }
				167 = {	add_core_of = CAT }
				177 = {	add_core_of = CAT }
				794 = {	add_core_of = CAT }				
				CAT = {
					load_oob = "CAT_ARAGON_1936"
					if = {
						limit = { has_dlc = "Man the Guns" }
							load_oob = "CAT_ARAGON_1936_naval_mtg"
						else = {
							load_oob = "CAT_ARAGON_1936_naval_legacy"
						}
					}										
					transfer_state = 114
					transfer_state = 115
					transfer_state = 117
					transfer_state = 156
					transfer_state = 166
					
					transfer_state = 167
					transfer_state = 177
					transfer_state = 794
					GLC = {
						every_unit_leader = {
							limit = {
								OR = {
									has_id =  1102
									has_id =  1103
									has_id =  1104
									has_id =  1105
									has_id =  1106
									has_id =  1107
									has_id =  1108
									has_id =  1109
									has_id =  1110
									has_id =  1111
									has_id =  1112
									has_id =  1113
									has_id =  1114
									has_id =  1115
									has_id =  1116
									has_id =  1117
									has_id =  1118								
								}
	
							}						
							set_nationality = SPR
						}
					}
					NAV = {
						every_unit_leader = {
							limit = {
								OR = {
									has_id =  1102
									has_id =  1103
									has_id =  1104
									has_id =  1105
									has_id =  1106
									has_id =  1107
									has_id =  1108
									has_id =  1109
									has_id =  1110
									has_id =  1111
									has_id =  1112
									has_id =  1113
									has_id =  1114
									has_id =  1115
									has_id =  1116
									has_id =  1117
									has_id =  1118								
								}
	
							}						
							set_nationality = SPR
						}
					}
					CAT = {
						every_unit_leader = {
							limit = {
								OR = {
									has_id =  1102
									has_id =  1103
									has_id =  1104
									has_id =  1105
									has_id =  1106
									has_id =  1107
									has_id =  1108
									has_id =  1109
									has_id =  1110
									has_id =  1111
									has_id =  1112
									has_id =  1113
									has_id =  1114
									has_id =  1115
									has_id =  1116
									has_id =  1117
									has_id =  1118								
								}
	
							}						
							set_nationality = SPR
						}
					}
					change_tag_from = SPR
				}
				NAV = {
					load_oob = "NAV_1936"
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = can_fragmentation_status
						option = CAN_FRAGMENTED
					}
				}
				CAN = {
					release = QBC
					if = {
						limit = { has_dlc = "Together for Victory" }
						remove_ideas = CAN_conscription_crisis

					}

					transfer_units_fraction = {
						target = QBC
						size = 0.1
					}																				
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = can_fragmentation_status
						option = CAN_DECENTRALIZED
					}
				}
				CAN = {
					release_puppet = QBC
					if = {
						limit = { has_dlc = "Together for Victory" }
						remove_ideas = CAN_conscription_crisis

					}
					transfer_units_fraction = {
						target = QBC
						size = 0.1
					}										
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = pol_fragmentation_status
						option = POL_FRAGMENTED
					}
				}
				GER = {
					annex_country = {
					    target = DNZ
					    transfer_troops = yes
					}				
				}

				713 = {	add_core_of = GER }	
				POL = {
					release = UKR
					release = BLR
					transfer_units_fraction = {
						target = UKR
						size = 0.05
					}
					transfer_units_fraction = {
						target = BLR
						size = 0.05
					}										
				}
				LIT = { transfer_state = 784 }				
			}
			if = {
				limit = {
					has_game_rule = {
						rule = pol_fragmentation_status
						option = POL_DECENTRALIZED
					}
				}
				POL = {
					release_puppet = UKR
					release_puppet = BLR
					transfer_units_fraction = {
						target = UKR
						size = 0.05
					}
					transfer_units_fraction = {
						target = BLR
						size = 0.05
					}										
				}
				LIT = { transfer_state = 784 }	
			}
			if = {
				limit = {
					has_game_rule = {
						rule = pol_fragmentation_status
						option = POL_COMMONWEALTH
					}
				}
				LAT = {
					every_owned_state = {
						add_core_of = POL	
					}					
				}				
				LIT = {
					every_unit_leader = {
						set_nationality = POL
					}
					every_owned_state = {
						add_core_of = POL	
					}					
				}
				POL = {
					annex_country = {
						target = LIT
						transfer_troops = yes
					}					
					annex_country = {
						target = LAT
						transfer_troops = no
					}
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}
					set_global_flag = form_commonwealth_flag
					set_cosmetic_tag = PLC_UNIFIED					
				}				
				#prussia
				763 = { add_core_of = POL }
				POL = { transfer_state = 763 }
				5 = { add_core_of = POL }
				POL = { transfer_state = 5 }

				207 = { add_core_of = POL }
				POL = { transfer_state = 207 }
				206 = { add_core_of = POL }
				POL = { transfer_state = 206 }
				204 = { add_core_of = POL }
				POL = { transfer_state = 204 }
				241 = { add_core_of = POL }
				POL = { transfer_state = 241 }
				194 = { add_core_of = POL }
				POL = { transfer_state = 194 }
				193 = { add_core_of = POL }
				POL = { transfer_state = 193 }
				203 = { add_core_of = POL }
				POL = { transfer_state = 203 }				
				202 = { add_core_of = POL }
				POL = { transfer_state = 202 }
				201 = { add_core_of = POL }
				POL = { transfer_state = 201 }
				199 = { add_core_of = POL }
				POL = { transfer_state = 199 }
				198 = { add_core_of = POL }
				POL = { transfer_state = 198 }
				259 = { add_core_of = POL }
				POL = { transfer_state = 259 }								
				
				188 = { add_core_of = POL }
				POL = { transfer_state = 188 }	

			}
			if = {
				limit = {
					has_game_rule = {
						rule = smi_liberation_status
						option = SMI_LIBERATED
					}
				}
				NOR = {
					release = SMI
								
				}
				SMI = {
					transfer_state = 144
					transfer_state = 148
					transfer_state = 147
					transfer_state = 666
					transfer_state = 722
					set_capital = 144
				}
				144 = {	add_core_of = NOR }		
			}
			if = {
				limit = {
					has_game_rule = {
						rule = smi_liberation_status
						option = SMI_LIBERATED_NOR_SWITCH
					}
				}
				NOR = {
					release = SMI
					transfer_units_fraction = {
						target = SMI
						size = 0.03
					}										
				}
				SWE = {
					transfer_units_fraction = {
						target = SMI
						size = 0.03
					}					
				}
				FIN = {
					transfer_units_fraction = {
						target = SMI
						size = 0.03
					}					
				}				
				SMI = {
					transfer_state = 144
					transfer_state = 148
					transfer_state = 147
					transfer_state = 666
					transfer_state = 722
					set_capital = 144
					change_tag_from = NOR
				}
				144 = {	add_core_of = NOR }	
			}								
			if = {
				limit = {
					has_game_rule = {
						rule = kur_liberation_status
						option = KUR_LIBERATED
					}
				}
				IRQ = {
					release = KUR
					676 = {	add_core_of = IRQ }
					transfer_units_fraction = {
						target = KUR
						size = 0.05
					}										
				}
				TUR = {
					transfer_units_fraction = {
						target = KUR
						size = 0.05
					}					
				}
				PER = {
					transfer_units_fraction = {
						target = KUR
						size = 0.05
					}					
				}				
				KUR = {
					transfer_state = 352
					transfer_state = 353
					transfer_state = 350
					transfer_state = 419
					transfer_state = 421
					set_capital = 676
				}
				676 = {	add_core_of = IRQ }			
			}
			if = {
				limit = {
					has_game_rule = {
						rule = kur_liberation_status
						option = KUR_LIBERATED_IRQ_SWITCH
					}
				}
				IRQ = {
					release = KUR					
				}
				KUR = {
					transfer_state = 352
					transfer_state = 353
					transfer_state = 350
					transfer_state = 419
					transfer_state = 421
					set_capital = 676
					change_tag_from = IRQ
				}
				676 = {	add_core_of = IRQ }	
			}						
			if = {
				limit = {
					has_game_rule = {
						rule = central_american_unification_status
						option = HON_CENTRAL_AMERICA_UNIFIED
					}
				}
				HON = {
					annex_country = {
						target = GUA
						transfer_troops = yes
					}
					annex_country = {
						target = NIC
						transfer_troops = yes
					}
					annex_country = {
						target = COS
						transfer_troops = yes
					}
					annex_country = {
						target = ELS
						transfer_troops = yes
					}
					GUA = {
						every_unit_leader = {
							set_nationality = ROOT
						}					
					}
					ELS = {
						every_unit_leader = {
							set_nationality = ROOT
						}					
					}
					NIC = {
						every_unit_leader = {
							set_nationality = ROOT
						}					
					}
					COS = {
						every_unit_leader = {
							set_nationality = ROOT
						}					
					}															
					304 = {	add_core_of = HON }
					311 = {	add_core_of = HON }
					313 = {	add_core_of = HON }
					314 = {	add_core_of = HON }
					316 = {	add_core_of = HON }
					317 = {	add_core_of = HON }
					set_cosmetic_tag = USC_UNIFIED
					set_global_flag = form_united_central_america_flag																								
				}
			}	
			#Game Rules Focus Trees			
			if = {
				limit = {
					has_game_rule = {
						rule = HOL_focus_tree_selection
						option = STANDARD_TREE
					}
					has_dlc = "Man the Guns"
				}
				set_global_flag = hol_mtg_focus_tree
				HOL = {
					load_focus_tree = netherlands_focus 
					remove_ideas = HOL_reliance_on_the_gold_standard
					remove_ideas =	tblra_pillarized_society
					remove_ideas =	tblra_peacetime_national_union
					remove_ideas =	tblra_recovery_from_the_great_depression1
					remove_ideas =	HOL_dutch_plane_requirements_list
					add_country_leader_trait = strict_austerity_adherent
					add_ideas = {
						HOL_aloof_neutrality
						HOL_shell_shocked_spectator_5
						HOL_de_crisisjaren_5
						HOL_weak_government
					}
					set_variable = { var = gateway_to_europe_influence_pp_total value = 0 }					
				}				
			}
		
			if = {
				limit = {
					has_game_rule = {
						rule = SAF_focus_tree_selection
						option = STANDARD_TREE
					}
					has_dlc = "Together for Victory"
				}
				set_global_flag = saf_tfv_focus_tree
				SAF = {
					load_focus_tree = south_african_focus 
					remove_ideas =	SAF_pierre_van_ryneveld
					remove_ideas =	SAF_pierre_van_ryneveld2
					remove_ideas =	SAF_untrained_staff_officers
					add_ideas = {
						SAF_ossewabrandwag
						SAF_history_of_segregation
					}
					add_opinion_modifier = { target = ENG modifier = SAF_anti_british_sentiment }
					add_to_tech_sharing_group = commonwealth_research			
				}				
			}
			if = {
				limit = {
					has_game_rule = {
						rule = AST_focus_tree_selection
						option = STANDARD_TREE
					}
					has_dlc = "Together for Victory"
				}
				set_global_flag = ast_tfv_focus_tree
				AST = {
					load_focus_tree = australian_focus
					remove_ideas = AST_R56_great_depression_1
					remove_ideas = AST_R56_memories_of_gallipoli
					add_ideas = AST_great_depression_1
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = GER_focus_tree_selection
						option = STANDARD_TREE
					}
				}
				set_global_flag = GER_use_standard_tree
				GER = {
					load_focus_tree = german_standard_focus
					remove_ideas = GER_enigma_machine0
					add_ideas = GER_mefo_bills_1
					activate_mission = GER_mefo_bills_mission
				}
			}
			if = {
				limit = {
					OR = {
						has_game_rule = {
							rule = POR_focus_tree_selection
							option = R56_TREE
						}
						NOT = {
							has_dlc = "La Resistance"
						}
					}
				}
				set_global_flag = POR_R56_focus_tree
			}
			
			if = {
				limit = {
					OR = {
						has_game_rule = {
							rule = SPR_focus_tree_selection
							option = R56_TREE
						}
						NOT = {
							has_dlc = "La Resistance"
						}
					}
				}
				SPR = {
					set_global_flag = spr_r56_focus_tree
					set_country_flag = spr_r56_focus_tree
					load_focus_tree = Spain_focus
					remove_ideas = 	SPA_carlism_1
					remove_ideas = SPR_military_disloyalty
					remove_ideas =  SPR_political_violence
					remove_ideas = SPR_national_strikes_3
					add_ideas = SPR_the_black_years
					remove_unit_leader = 1102
					remove_unit_leader = 1103
					remove_unit_leader = 1104
					remove_unit_leader = 1105
					remove_unit_leader = 1106
					remove_unit_leader = 1107
					remove_unit_leader = 1108
					remove_unit_leader = 1109
					remove_unit_leader = 1110
					remove_unit_leader = 1111
					remove_unit_leader = 1112
					remove_unit_leader = 1113
					remove_unit_leader = 1114
					remove_unit_leader = 1115
					remove_unit_leader = 1116
					remove_unit_leader = 1117
					remove_unit_leader = 1118
					remove_unit_leader = 6008 #Really Stupid way to fix this but it was a CTD issue
					create_country_leader = {
						name = "Alejandro Lerroux"
						id = 1100
						desc = "POLITICS_ALEJANDRO_LERROUX_DESC"
						picture = "gfx/leaders/Europe/Portrait_Europe_Generic_land_5.dds"
						expire = "1965.1.1"
						ideology = centrism
						traits = {
							#
						}
					}
					create_country_leader = {
						name = "Francisco Franco"
						desc = "POLITICS_FRANCISCO_FRANCO_DESC"
						picture = "GFX_portrait_spain_francisco_franco"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
				
						}
					}					
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = MEX_focus_tree_selection
						option = STANDARD_TREE
					}
					has_dlc = "Man the Guns"
				}
				set_global_flag = mex_mtg_focus_tree
				MEX = {
					load_focus_tree = mexico_focus_tree
					load_mtg_mexico = yes
				}
			}
			if = {
				limit = {
					OR = {
						has_game_rule = {
							rule = MEX_focus_tree_selection
							option = R56_TREE
						}
						NOT = {
							has_dlc = "Man the Guns"
						}
					}
				}
				MEX = {
					set_technology = {
						support_weapons = 1
						tech_support = 1
						tech_recon = 1
						tech_engineers = 1
						tech_military_police = 1
						tech_mountaineers = 1
						marines  = 1
						transport = 1
						trench_warfare = 1
					}
					
				}
			}
			#Game Rules Focus Trees			
			if = {
				limit = {
					has_game_rule = {
						rule = POR_focus_tree_selection
						option = STANDARD_TREE
					}
					has_dlc = "La Resistance"
				}
				set_global_flag = por_lar_focus_tree
				POR = {
					load_focus_tree = portuguese_focus
					add_country_leader_trait = conservative_nationalist_lar
					add_ideas = POR_unreliable_army
					add_ideas = POR_unstable_republic
					set_stability = 0.60
					set_war_support = 0.15	
					set_research_slots = 3
				
					ENG = {
						add_opinion_modifier = {
							target = POR 
							modifier  = POR_anglo_portuguese_alliance
						}
					}
				
					POR = {
						add_opinion_modifier = {
							target = ENG 
							modifier  = POR_anglo_portuguese_alliance
						}
					}
				
					GER = {
						add_opinion_modifier = {
							target = POR
							modifier = fascism_leanings_good
						}
					}
				
					ITA = {
						add_opinion_modifier = {
							target = POR
							modifier = fascism_leanings_good
						}
					}			
				}				
			}			
			#doesn't work progessively integrated into the fragmenation rules
			#if = {
			#	limit = {
			#		has_game_rule = {
			#			rule = ADD_CORES_AND_CLAIMS_OF_RELEASING_COUNTRIES
			#			option = yes
			#		}
			#	}
			#	if = {
			#		limit = {
			#			OR = {
			#				has_game_rule = {
			#					rule = pol_fragmentation_status
			#					option = POL_DECENTRALIZED
			#				}
			#				has_game_rule = {
			#					rule = pol_fragmentation_status
			#					option = POL_FRAGMENTED
			#				}							
			#			}
			#		}
			#		96 = {	add_core_of = POL }
			#		95 = {	add_core_of = POL }
			#		94 = {	add_core_of = POL }
			#		93 = {	add_core_of = POL }
			#		91 = {	add_core_of = POL }
			#		89 = {	add_core_of = POL }						
			#	}								
			#	if = {
			#		limit = {
			#			OR = {
			#				has_game_rule = {
			#					rule = can_fragmentation_status
			#					option = CAN_DECENTRALIZED
			#				}
			#				has_game_rule = {
			#					rule = can_fragmentation_status
			#					option = CAN_FRAGMENTED
			#				}							
			#			}														
			#		}
			#		466 = {	add_core_of = CAN }
			#		468 = {	add_core_of = CAN }						
			#	}			
			#	if = {
			#		limit = {
			#			has_game_rule = {
			#				rule = SOV_FRAGMENTATION_STATUS
			#				option = SOV_FRAGMENTED
			#			}													
			#		}
			#		SOV = {
			#			#ukr
			#			remove_state_core = 73
			#			add_state_claim = 73
			#			add_state_claim = 89
			#			add_state_claim = 91
			#			add_state_claim = 93
			#			add_state_claim = 199
			#			add_state_claim = 198
			#			add_state_claim = 201
			#			add_state_claim = 202
			#			add_state_claim = 203
			#			add_state_claim = 192
			#			add_state_claim = 197
			#			add_state_claim = 193
			#			add_state_claim = 259
			#			add_state_claim = 225
			#			add_state_claim = 226
			#			add_state_claim = 196
			#			add_state_claim = 200
			#			add_state_claim = 221
			#			add_state_claim = 227
			#			add_state_claim = 228
			#			#blr
			#			add_state_claim = 241
			#			add_state_claim = 194
			#			add_state_claim = 204
			#			add_state_claim = 206	
			#			add_state_claim = 207				
			#		}					
			#	}					
			#}			
			#R56 Custom gameplay rules
			if = {
				limit = {
					has_game_rule = {
						rule = allow_national_characters
						option = no
					}
				}
				set_global_flag = NATIONAL_CHARACTERS_BLOCKED
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = ONE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_1
				}				
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = TWO_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_2
				}				
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = THREE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_3
				}				
			}
			
			if = { 
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = NON_US_MAJORS
					}
				}
				ENG = {
					create_intelligence_agency = yes
				}
				FRA = {
					create_intelligence_agency = yes
				}
				GER = {
					create_intelligence_agency = yes
				}
				ITA = {
					create_intelligence_agency = yes
				}				
				JAP = {
					create_intelligence_agency = yes
				}
				SOV = {
					create_intelligence_agency = yes
				}
				POL = {
					create_intelligence_agency = yes
				}																									
			}			
			if = { 
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_MAJORS
					}
				}
				ENG = {
					create_intelligence_agency = yes
				}
				FRA = {
					create_intelligence_agency = yes
				}
				GER = {
					create_intelligence_agency = yes
				}
				ITA = {
					create_intelligence_agency = yes
				}				
				JAP = {
					create_intelligence_agency = yes
				}
				SOV = {
					create_intelligence_agency = yes
				}
				USA = {
					create_intelligence_agency = yes
				}				
				POL = {
					create_intelligence_agency = yes
				}																									
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_MAJORS_AND_STRONG_MINORS
					}
				}
				ENG = {
					create_intelligence_agency = yes
				}
				FRA = {
					create_intelligence_agency = yes
				}
				GER = {
					create_intelligence_agency = yes
				}
				ITA = {
					create_intelligence_agency = yes
				}				
				JAP = {
					create_intelligence_agency = yes
				}
				SOV = {
					create_intelligence_agency = yes
				}
				USA = {
					create_intelligence_agency = yes
				}				
				POL = {
					create_intelligence_agency = yes
				}
				CZE = {
					create_intelligence_agency = yes
				}
				LAT = {
					create_intelligence_agency = yes
				}
				EST = {
					create_intelligence_agency = yes
				}
				LIT = {
					create_intelligence_agency = yes
				}
				ROM = {
					create_intelligence_agency = yes
				}
				BUL = {
					create_intelligence_agency = yes
				}
				TUR = {
					create_intelligence_agency = yes
				}
				GRE = {
					create_intelligence_agency = yes
				}
				YUG = {
					create_intelligence_agency = yes
				}
				AUS = {
					create_intelligence_agency = yes
				}
				BEL = {
					create_intelligence_agency = yes
				}
				HOL = {
					create_intelligence_agency = yes
				}
				SPR = {
					create_intelligence_agency = yes
				}
				POR = {
					create_intelligence_agency = yes
				}
				DEN = {
					create_intelligence_agency = yes
				}
				SWE = {
					create_intelligence_agency = yes
				}
				NOR = {
					create_intelligence_agency = yes
				}
				FIN = {
					create_intelligence_agency = yes
				}
				SAF = {
					create_intelligence_agency = yes
				}				
				BRA = {
					create_intelligence_agency = yes
				}
				MEX = {
					create_intelligence_agency = yes
				}
				CAN = {
					create_intelligence_agency = yes
				}
				AST = {
					create_intelligence_agency = yes
				}
				CHI = {
					create_intelligence_agency = yes
				}
				PRC = {
					create_intelligence_agency = yes
				}																				

			}
			if = { 
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_COUNTRIES
					}
				}
				every_country = {
					create_intelligence_agency = yes
				}																									
			}			
		}
	}
###---> On State Control Changed <><> <><> <><>
	on_state_control_changed = {
		effect = {
		
			if = {
				limit = {
					original_tag = JAP
					has_government = communism

					282 = { is_controlled_by = ROOT }
					FROM = {
						original_tag = JAP
						has_government = fascism
					}
				}
				FROM = { save_event_target_as = jap_civ_loser }
				MAN = { country_event = { id = wtt_japan.121 days = 1 } }
			}
			
			#Ukrainian Army Grows with recaptured core territory
			if = {
				limit = {
					NOT = { FROM.FROM = { has_state_flag = UKR_recaptured_territory_flag } }
					OR = {
						AND = {
							DOU = { is_in_faction_with = ROOT }
							FROM.FROM = { is_core_of = DOU }
						}
						AND = {
							DOU = { is_subject_of = ROOT }
							FROM.FROM = { is_core_of = DOU }
						}
						AND = {
							ROOT = { original_tag = DOU }
							FROM.FROM = { is_core_of = ROOT }
						}
					}
				}
				FROM.FROM = { set_state_flag = UKR_recaptured_territory_flag }
				DOU = {
					add_equipment_to_stockpile = {
						type = infantry_equipment_1
						amount = 1775
						producer = DOU
					}
					add_equipment_to_stockpile = {
						type = support_equipment_1
						amount = 10
						producer = DOU
					}
					add_equipment_to_stockpile = {
						type = artillery_equipment_1
						amount = 2
						producer = DOU
					}
				}
			}
		
			#Danzig auto-annex workaround
			if = {
				limit = { 
					POL = { controls_state = 797 }
					GER = { controls_state = 85 }
				}
				GER = { transfer_state = 797 }
				797 = {	add_core_of = GER }
			}
			if = {
				limit = {
					country_exists = DNZ
					DNZ = { is_subject_of = POL }
					GER = { controls_state = 85 }
				}
				DNZ = { country_event = poland.58 }
			}
		}
	}
	
	###---> On Subject Autonomy Level Change <><> <><> <><>
	on_subject_autonomy_level_change = {
		effect = {
			#Achievement
			if = {
				limit = { tag = EGY }
				if = {
					limit = { has_autonomy_state = autonomy_colony }
					set_country_flag = achievement_EGY_colony
					log = EGY_colony
				}
				if = {
					limit = { has_autonomy_state = autonomy_dominion }
					set_country_flag = achievement_EGY_dominion
					log = EGY_dominion
				}
			}

			#Add to french tech group
			if = {
				limit = {
					OR = {
						has_autonomy_state = autonomy_colony
						has_autonomy_state = autonomy_dominion
					}
					OVERLORD = { is_in_tech_sharing_group = commonwealth_research }
				}
				add_to_tech_sharing_group = commonwealth_research				
			}

			if = {
				limit = {
					tag = FRI
					tag = MOR
					tag = TUN
					tag = SYR
					tag = LEB
					NOT = {						
					    has_autonomy_state = autonomy_colony
						has_autonomy_state = autonomy_dominion
					}
				}
				
				remove_from_tech_sharing_group = french_research
			}
		}
	}
	
	###---> On Dismantle Faction <><> <><> <><>
	on_dismantle_faction = {
		effect = {
			if = {
				limit = { original_tag = POL }
				remove_ideas = POL_Wanda_Wasilewska
				remove_ideas = POL_Wladyslaw_Studnicki
			}
		}
	}
	
	###---> On Uncapitulation <><> <><> <><>
	on_uncapitulation = {
		effect = {
			if = {
				limit = { original_tag = POL }
				drop_cosmetic_tag = yes
				POL = { set_party_name = { ideology = fascism long_name = POL_fascism_party_long name = POL_fascism_party } }
				if = {
					limit = { 
						has_completed_focus = POL_The_Endecja_Movement
					}
					set_party_name = { ideology = democratic long_name = POL_ND_party_long name = POL_ND_party }
				}
				if = {
					limit = {
						has_completed_focus = POL_The_Polish_Socialist_Party
					}
					set_party_name = { ideology = democratic long_name = POL_PPS_party_long name = POL_PPS_party }
				}
				if = {
					limit = {
						NOT = { has_completed_focus = POL_The_Endecja_Movement }
						NOT = { has_completed_focus = POL_The_Polish_Socialist_Party }
						NOT = { is_puppet_of = SOV }
						NOT = { has_government = communism }
					}
					set_party_name = { ideology = democratic long_name = POL_democratic_party_long name = POL_democratic_party }
				}
				if = {
					limit = {
						NOT = { has_completed_focus = POL_The_Endecja_Movement }
						NOT = { has_completed_focus = POL_The_Polish_Socialist_Party }
						is_puppet_of = SOV
						has_government = communism
					}
					POL = { set_party_name = { ideology = democratic long_name = POL_PSL_long name = POL_PSL_party } }
				}
			}
		}
	}
	
	###---> On Liberate (ONLY during peace conference) <><> <><> <><>
	on_liberate = {
		effect = {
			if = {
				limit = {
					TAG = ZIM
				}
				ZIM = {
					drop_cosmetic_tag = yes #british colony flag
				}
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_COUNTRIES
					}
				}
				create_intelligence_agency = yes																									
			}
			if = { 
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_MAJORS_AND_STRONG_MINORS
					}
					capital_scope = {
						OR = {
							is_on_continent = north_america
							is_on_continent = europe
						}
					}
				}
				create_intelligence_agency = yes																									
			}						
		}
	}
	on_war = {
		effect = {
			if = {
				limit = {
					has_global_flag = POL_gamelin_convention
					tag = POL
					has_defensive_war = yes
					OR = {
						has_government = neutrality
						has_government = democratic
					}
					NOT = {
						is_in_faction = yes
					}
				}
				if = {
					limit = { FRA = { is_faction_leader = yes } }
					FRA = { country_event = poland.126 }
				}
				if = {
					limit = {
						ENG = {
							is_faction_leader = yes
							is_in_faction_with = FRA
						}
					}
					ENG = { country_event = poland.126 }
				}				
			}
		}
	}
	on_ruling_party_change = { 
		# temp var old_ideology_token is available for effects
		effect = {
			#little script to make contries changing government leave factions, currently only if at peace
			if = {
				limit = {
					is_in_faction = yes
					is_faction_leader = no
					NOT = {
						OR = { #that should be the same thing alright?
							is_subject = yes
							is_puppet = yes
							has_capitulated = yes
						}	
					}
					
					any_country = {
						is_faction_leader = yes
						NOT = {
							AND = {
								tag = JAP
								OR = {
									has_government = neutrality
									has_government = fascism
								}
								
							}
						}						
						is_in_faction_with = ROOT
						NOT = {
							has_government = ROOT
						}
					}
				}
				country_event = { id = r56i.event.10 }
			}

			#little script to make puppet countries changing government leave factions and declare independence
			if = {
				limit = {
					OR = { #that should be the same thing alright? But is_puppet doesn't work?
						is_subject = yes
						is_puppet = yes
					}
					OVERLORD = {
						NOT = {
							has_government = ROOT
							NOT = {
								AND = {
									tag = JAP
									has_government = neutrality
									ROOT = {
										has_government = fascism
									}
								}
							}							
						}
					}
					NOT = {
						OR = {
							tag = TIB
							tag = BHU
							tag = MOR
							tag = TUN
							has_focus_tree = indian_focus
							has_focus_tree = new_zealander_focus
							has_focus_tree = canadian_focus
							has_focus_tree = australian_focus
							has_focus_tree = r56_australian_focus
							has_civil_war = yes
							AND = {
								is_subject_of = FRA
								FRA = {
									has_completed_focus = FRA_autonomy_indochina
								}
								OR = {
									original_tag = VIN
									original_tag = CAM
									original_tag = LAO
								}
							}
						}
					}
				}
				country_event = { id = r56i.event.12 }
			}
		}
	}		
}